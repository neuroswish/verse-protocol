{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_reserveRatio",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_slopeInit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_transactionShare",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_cryptomedia",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        }
      ],
      "name": "testFail_Initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Buy",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BuyInitial",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BuyInsufficientInitialPrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BuyInvalidSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BuyInvalidValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_BuySlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_NonHolderCannotSell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Redeem",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_RedeemInvalidBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_Sell",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SellInvalidAmount",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SellInvalidAmountArgZero",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SellInvalidSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_SellSlippage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506183998061002d6000396000f3fe608060405260043610620001235760003560e01c80636394b38b11620000a1578063cb72be24116200006c578063cb72be241462000287578063d93f5337146200029f578063e850d1f814620002b7578063fa7626d414620002cf578063ff5507fd14620002eb57600080fd5b80636394b38b146200020a57806381bd61911462000222578063ba414fa6146200023a578063ca8f3000146200026f57600080fd5b806338489a0c11620000ee57806338489a0c1462000192578063396abd3114620001aa5780633aaa75b514620001c25780633cc7c94a14620001da57806351c0ca5314620001f257600080fd5b806305601b9414620001305780630a9254e4146200014a5780630cab351b14620001625780632d585d29146200017a57600080fd5b366200012b57005b600080fd5b3480156200013d57600080fd5b506200014862000310565b005b3480156200015757600080fd5b50620001486200043f565b3480156200016f57600080fd5b5062000148620006f4565b3480156200018757600080fd5b506200014862000841565b3480156200019f57600080fd5b5062000148620009b6565b348015620001b757600080fd5b506200014862000ae3565b348015620001cf57600080fd5b506200014862000c15565b348015620001e757600080fd5b506200014862000d9d565b348015620001ff57600080fd5b506200014862000ec3565b3480156200021757600080fd5b506200014862001185565b3480156200022f57600080fd5b50620001486200144f565b3480156200024757600080fd5b506000546200025b90610100900460ff1681565b604051901515815260200160405180910390f35b3480156200027c57600080fd5b506200014862001642565b3480156200029457600080fd5b506200014862001758565b348015620002ac57600080fd5b50620001486200187e565b348015620002c457600080fd5b506200014862001a65565b348015620002dc57600080fd5b506000546200025b9060ff1681565b348015620002f857600080fd5b50620001486200030a36600462001d34565b62001b73565b6000546040516303223eab60e11b815260016004820152620100009091046001600160a01b0316906306447d5690602401600060405180830381600087803b1580156200035c57600080fd5b505af115801562000371573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150670de0b6b3a7640000906024016000604051808303818588803b158015620003c557600080fd5b505af1158015620003da573d6000803e3d6000fd5b505060035460408051630be040fb60e41b815290516001600160a01b03909216945063be040fb09350600480820193506000929182900301818387803b1580156200042457600080fd5b505af115801562000439573d6000803e3d6000fd5b50505050565b6000805462010000600160b01b031916757109709ecfa91a80626ff3989d68f67f5b1dd12d0000179055604051620004779062001c54565b604051809103906000f08015801562000494573d6000803e3d6000fd5b50600180546001600160a01b0319166001600160a01b03929092169182179055604051620004c29062001c62565b6001600160a01b039091168152602001604051809103906000f080158015620004ef573d6000803e3d6000fd5b50600280546001600160a01b0319166001600160a01b039290921691821790556040516319bc2f3360e11b815260c06004820152600560c4820181905264566572736560d81b60e4830152610100602483015261010482015264564552534560d81b6101248201526203b2f86044820152660292ad53ffa0a160648201526101f4608482015261014060a48201526009610144820152683b32b939b2973c3cbd60b91b6101648201526333785e66906101840160408051808303816000875af1158015620005c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620005e7919062001de7565b600680546001600160a01b039283166001600160a01b0319918216811790925560058054948416948216851790556003805482169094179093556004805490931617825560005460405163c88a5e6d60e01b815260019381019390935268056bc75e2d631000006024840152620100009004169063c88a5e6d90604401600060405180830381600087803b1580156200067f57600080fd5b505af115801562000694573d6000803e3d6000fd5b505060005460405163c88a5e6d60e01b81526002600482015268056bc75e2d631000006024820152620100009091046001600160a01b0316925063c88a5e6d91506044015b600060405180830381600087803b1580156200042457600080fd5b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b1580156200074057600080fd5b505af115801562000755573d6000803e3d6000fd5b505060005460405163f28dceb360e01b815260206004820152600d60248201526c494e56414c49445f56414c554560981b6044820152620100009091046001600160a01b0316925063f28dceb39150606401600060405180830381600087803b158015620007c257600080fd5b505af1158015620007d7573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a91506000906024015b6000604051808303818588803b1580156200082557600080fd5b505af11580156200083a573d6000803e3d6000fd5b5050505050565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b1580156200088d57600080fd5b505af1158015620008a2573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150670de0b6b3a7640000906024016000604051808303818588803b158015620008f657600080fd5b505af11580156200090b573d6000803e3d6000fd5b50506003546040516370a0823160e01b8152600160048201527f2cab9790510fd8bdfbd2115288db33fec66691d476efc5427cfd4c096930175594506001600160a01b0390911692506370a0823191506024015b602060405180830381865afa1580156200097d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620009a3919062001e26565b60405190815260200160405180910390a1565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b15801562000a0257600080fd5b505af115801562000a17573d6000803e3d6000fd5b505060005460405163f28dceb360e01b81526020600482015260136024820152721253959053125117d4d1531317d05353d55395606a1b6044820152620100009091046001600160a01b0316925063f28dceb39150606401600060405180830381600087803b15801562000a8a57600080fd5b505af115801562000a9f573d6000803e3d6000fd5b505060035460405163d79875eb60e01b815260006004820152670de0b6b3a764000060248201526001600160a01b03909116925063d79875eb9150604401620006d9565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b15801562000b2f57600080fd5b505af115801562000b44573d6000803e3d6000fd5b505060005460405163f28dceb360e01b815260206004820152601a60248201527f494e53554646494349454e545f494e495449414c5f50524943450000000000006044820152620100009091046001600160a01b0316925063f28dceb39150606401600060405180830381600087803b15801562000bc157600080fd5b505af115801562000bd6573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a915066038d7ea4c68000906024016200080b565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b15801562000c6157600080fd5b505af115801562000c76573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150662386f26fc10000906024016000604051808303818588803b15801562000cc957600080fd5b505af115801562000cde573d6000803e3d6000fd5b505060005460405163f28dceb360e01b8152620100009091046001600160a01b0316935063f28dceb3925062000d18915060040162001e40565b600060405180830381600087803b15801562000d3357600080fd5b505af115801562000d48573d6000803e3d6000fd5b50505050600360009054906101000a90046001600160a01b03166001600160a01b031663be040fb06040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200042457600080fd5b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b15801562000de957600080fd5b505af115801562000dfe573d6000803e3d6000fd5b505060005460405163f28dceb360e01b815260206004820152601060248201526f494e56414c49445f534c49505041474560801b6044820152620100009091046001600160a01b0316925063f28dceb39150606401600060405180830381600087803b15801562000e6e57600080fd5b505af115801562000e83573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600060048201526001600160a01b03909116925063d96a094a915067016345785d8a0000906024016200080b565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b15801562000f0f57600080fd5b505af115801562000f24573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150670de0b6b3a7640000906024016000604051808303818588803b15801562000f7857600080fd5b505af115801562000f8d573d6000803e3d6000fd5b505060005460405163ca669fa760e01b815260026004820152620100009091046001600160a01b0316935063ca669fa792506024019050600060405180830381600087803b15801562000fdf57600080fd5b505af115801562000ff4573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150676f05b59d3b200000906024016000604051808303818588803b1580156200104857600080fd5b505af11580156200105d573d6000803e3d6000fd5b505060005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b0316935063ca669fa792506024019050600060405180830381600087803b158015620010af57600080fd5b505af1158015620010c4573d6000803e3d6000fd5b505060005460405163f28dceb360e01b8152602060048201526008602482015267534c49505041474560c01b6044820152620100009091046001600160a01b0316925063f28dceb39150606401600060405180830381600087803b1580156200112c57600080fd5b505af115801562001141573d6000803e3d6000fd5b505060035460405163d79875eb60e01b8152678ac7230489e800006004820181905260248201526001600160a01b03909116925063d79875eb9150604401620006d9565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b158015620011d157600080fd5b505af1158015620011e6573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150670de0b6b3a7640000906024016000604051808303818588803b1580156200123a57600080fd5b505af11580156200124f573d6000803e3d6000fd5b505060005460405163ca669fa760e01b815260026004820152620100009091046001600160a01b0316935063ca669fa792506024019050600060405180830381600087803b158015620012a157600080fd5b505af1158015620012b6573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150676f05b59d3b200000906024016000604051808303818588803b1580156200130a57600080fd5b505af11580156200131f573d6000803e3d6000fd5b505060005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b0316935063ca669fa792506024019050600060405180830381600087803b1580156200137157600080fd5b505af115801562001386573d6000803e3d6000fd5b505060005460405163f28dceb360e01b815260206004820152601060248201526f494e56414c49445f534c49505041474560801b6044820152620100009091046001600160a01b0316925063f28dceb39150606401600060405180830381600087803b158015620013f657600080fd5b505af11580156200140b573d6000803e3d6000fd5b505060035460405163d79875eb60e01b8152678ac7230489e800006004820152600060248201526001600160a01b03909116925063d79875eb9150604401620006d9565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b1580156200149b57600080fd5b505af1158015620014b0573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150670de0b6b3a7640000906024016000604051808303818588803b1580156200150457600080fd5b505af115801562001519573d6000803e3d6000fd5b505060005460405163ca669fa760e01b815260026004820152620100009091046001600160a01b0316935063ca669fa792506024019050600060405180830381600087803b1580156200156b57600080fd5b505af115801562001580573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150676f05b59d3b200000906024016000604051808303818588803b158015620015d457600080fd5b505af1158015620015e9573d6000803e3d6000fd5b50506003546040516370a0823160e01b8152600260048201527f2cab9790510fd8bdfbd2115288db33fec66691d476efc5427cfd4c096930175594506001600160a01b0390911692506370a0823191506024016200095f565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b1580156200168e57600080fd5b505af1158015620016a3573d6000803e3d6000fd5b505060005460405163f28dceb360e01b8152620100009091046001600160a01b0316925063f28dceb39150620016dc9060040162001e40565b600060405180830381600087803b158015620016f757600080fd5b505af11580156200170c573d6000803e3d6000fd5b505060035460405163d79875eb60e01b8152681b1ae4d6e2ef5000006004820152670de0b6b3a764000060248201526001600160a01b03909116925063d79875eb9150604401620006d9565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b158015620017a457600080fd5b505af1158015620017b9573d6000803e3d6000fd5b505060005460405163f28dceb360e01b8152602060048201526008602482015267534c49505041474560c01b6044820152620100009091046001600160a01b0316925063f28dceb39150606401600060405180830381600087803b1580156200182157600080fd5b505af115801562001836573d6000803e3d6000fd5b5050600354604051636cb504a560e11b81526802b5e3af16b188000060048201526001600160a01b03909116925063d96a094a9150670de0b6b3a7640000906024016200080b565b60005460405163ca669fa760e01b815260016004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b158015620018ca57600080fd5b505af1158015620018df573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150670de0b6b3a7640000906024016000604051808303818588803b1580156200193357600080fd5b505af115801562001948573d6000803e3d6000fd5b50506000546040516303223eab60e11b815260026004820152620100009091046001600160a01b031693506306447d5692506024019050600060405180830381600087803b1580156200199a57600080fd5b505af1158015620019af573d6000803e3d6000fd5b5050600354604051636cb504a560e11b8152600160048201526001600160a01b03909116925063d96a094a9150676f05b59d3b200000906024016000604051808303818588803b15801562001a0357600080fd5b505af115801562001a18573d6000803e3d6000fd5b505060035460405163d79875eb60e01b8152671bc16d674ec80000600482015267016345785d8a000060248201526001600160a01b03909116935063d79875eb92506044019050620006d9565b60005460405163ca669fa760e01b815260036004820152620100009091046001600160a01b03169063ca669fa790602401600060405180830381600087803b15801562001ab157600080fd5b505af115801562001ac6573d6000803e3d6000fd5b505060005460405163f28dceb360e01b8152620100009091046001600160a01b0316925063f28dceb3915062001aff9060040162001e40565b600060405180830381600087803b15801562001b1a57600080fd5b505af115801562001b2f573d6000803e3d6000fd5b505060035460405163d79875eb60e01b815260016004820152670de0b6b3a764000060248201526001600160a01b03909116925063d79875eb9150604401620006d9565b6000805460405163ca669fa760e01b815260048101929092526201000090046001600160a01b03169063ca669fa790602401600060405180830381600087803b15801562001bc057600080fd5b505af115801562001bd5573d6000803e3d6000fd5b5050600354604051631745ff0560e31b81526001600160a01b03909116925063ba2ff828915062001c17908a908a908a908a908a908a908a9060040162001ebe565b600060405180830381600087803b15801562001c3257600080fd5b505af115801562001c47573d6000803e3d6000fd5b5050505050505050505050565b612b1f8062001f1f83390190565b6139268062004a3e83390190565b634e487b7160e01b600052604160045260246000fd5b600082601f83011262001c9857600080fd5b813567ffffffffffffffff8082111562001cb65762001cb662001c70565b604051601f8301601f19908116603f0116810190828211818310171562001ce15762001ce162001c70565b8160405283815286602085880101111562001cfb57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6001600160a01b038116811462001d3157600080fd5b50565b600080600080600080600060e0888a03121562001d5057600080fd5b873567ffffffffffffffff8082111562001d6957600080fd5b62001d778b838c0162001c86565b985060208a013591508082111562001d8e57600080fd5b5062001d9d8a828b0162001c86565b96505060408801359450606088013593506080880135925060a088013562001dc58162001d1b565b915060c088013562001dd78162001d1b565b8091505092959891949750929550565b6000806040838503121562001dfb57600080fd5b825162001e088162001d1b565b602084015190925062001e1b8162001d1b565b809150509250929050565b60006020828403121562001e3957600080fd5b5051919050565b602080825260149082015273494e53554646494349454e545f42414c414e434560601b604082015260600190565b6000815180845260005b8181101562001e965760208185018101518683018201520162001e78565b8181111562001ea9576000602083870101525b50601f01601f19169290920160200192915050565b60e08152600062001ed360e083018a62001e6e565b828103602084015262001ee7818a62001e6e565b60408401989098525050606081019490945260808401929092526001600160a01b0390811660a08401521660c0909101529291505056fe608060405234801561001057600080fd5b5061073f6001641c35fedd1560601b036020556001646c3390ecc9605e1b036021556001640cf801476160611b0360225560016431bdb23e1d605f1b0360235560016502fb1d8fe083605b1b0360245560016505b771955b37605a1b036025556001650af67a93bb5160591b0360265560016515060c256cb360581b036027556001651428a2f98d7360581b036028556001654d515663970960561b03602955600165944620b0e70f60551b03602a55600166011c592761c66760541b03602b5560016602214d10d014eb60531b03602c55600166020ade36b7dbef60531b03602d5560016603eab73b3bbfe360521b03602e556001660782ee3593f6d760511b03602f556001661ccf4b44bb4821604f1b0360305560016606e7f88ad8a77760511b0360315560016669f3d1c921891d604d1b03603255600166cb2ff529eb71e5604c1b03603355600166c2d415c3db974b604c1b0360345560016702eb40f9f620fda7604a1b0360355560016705990681d961a1eb60491b03603655600167055e12902701414760491b0360375560016714962dee9dc9764160471b0360385560016704ef57b9b560fab560491b0360395560016712ed7b32a58f552b60471b03603a556001679131271922eaa60760441b03603b556001678b380f3558668c4760441b03603c556001680215f77c045fbe885760421b03603d556001600160831b03603e556001670f577eded5773a1160471b03603f556001680eb5ec597592befbf5603f1b036040556001681c35fedd14b861eb05603e1b036041556001683619c87664579bc94b603d1b0360425560016867c00a3b07ffc01fd7603c1b03604355600168c6f6c8f8739773a7a5603b1b03604455600168bec763f8209b7a72b1603b1b0360455560016902dbb8caad9b7097b91b60391b03604655600169057b3d49dda84556d6f760381b03604755600169054183095b2c8ececf3160381b036048556001690a14517cc6b9457111ef60371b0360495560016913545598e5c23276ccf160361b03604a556001692511882c39c3adea96ff60351b03604b55600169471649d87199aa99075760341b03604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e556001600160811b03605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b6123d18061074e6000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063b62c23b51161005b578063b62c23b5146108a6578063beb27b86146108b9578063cbf806d0146108cc578063d47d2a76146108df57600080fd5b806376365af71461008d57806381c3ae3a146100a957806395eed524146100bc578063aa248a46146100cf575b600080fd5b610097620f424081565b60405190815260200160405180910390f35b6100976100b73660046121a8565b6108f2565b6100976100ca3660046121a8565b61099e565b6108a4701c35fedd14ffffffffffffffffffffffff602055701b0ce43b323fffffffffffffffffffffff6021557019f0028ec1ffffffffffffffffffffffff6022557018ded91f0e7fffffffffffffffffffffff6023557017d8ec7f0417ffffffffffffffffffffff6024557016ddc6556cdbffffffffffffffffffffff6025557015ecf52776a1ffffffffffffffffffffff6026557015060c256cb2ffffffffffffffffffffff602755701428a2f98d72ffffffffffffffffffffff6028557013545598e5c23fffffffffffffffffffff602955701288c4161ce1dfffffffffffffffffffff602a557011c592761c666fffffffffffffffffffff602b5570110a688680a757ffffffffffffffffffff602c55701056f1b5bedf77ffffffffffffffffffff602d55700faadceceeff8bffffffffffffffffffff602e55700f05dc6b27edadffffffffffffffffffff602f55700e67a5a25da4107fffffffffffffffffff603055700dcff115b14eedffffffffffffffffffff603155700d3e7a392431239fffffffffffffffffff603255700cb2ff529eb71e4fffffffffffffffffff603355700c2d415c3db974afffffffffffffffffff603455700bad03e7d883f69bffffffffffffffffff603555700b320d03b2c343d5ffffffffffffffffff603655700abc25204e02828dffffffffffffffffff603755700a4b16f74ee4bb207fffffffffffffffff6038557009deaf736ac1f569ffffffffffffffffff603955700976bd9952c7aa957fffffffffffffffff603a557009131271922eaa606fffffffffffffffff603b557008b380f3558668c46fffffffffffffffff603c55700857ddf0117efa215bffffffffffffffff603d557007ffffffffffffffffffffffffffffffff603e557007abbf6f6abb9d087fffffffffffffffff603f5570075af62cbac95f7dfa7fffffffffffffff60405570070d7fb7452e187ac13fffffffffffffff6041557006c3390ecc8af379295fffffffffffffff60425570067c00a3b07ffc01fd6fffffffffffffff604355700637b647c39cbb9d3d27ffffffffffffff6044557005f63b1fc104dbd39587ffffffffffffff6045557005b771955b36e12f7235ffffffffffffff60465570057b3d49dda84556d6f6ffffffffffffff60475570054183095b2c8ececf30ffffffffffffff60485570050a28be635ca2b888f77fffffffffffff6049557004d5156639708c9db33c3fffffffffffff604a557004a23105873875bd52dfdfffffffffffff604b55700471649d87199aa990756fffffffffffff604c557004429a21a029d4c1457cfbffffffffffff604d55700415bc6d6fb7dd71af2cb3ffffffffffff604e557003eab73b3bbfe282243ce1ffffffffffff604f557003c1771ac9fb6b4c18e229ffffffffffff605055700399e96897690418f785257fffffffffff605155700373fc456c53bb779bf0ea9fffffffffff60525570034f9e8e490c48e67e6ab8bfffffffffff60535570032cbfd4a7adc790560b3337ffffffffff60545570030b50570f6e5d2acca94613ffffffffff6055557002eb40f9f620fda6b56c2861ffffffffff6056557002cc8340ecb0d0f520a6af58ffffffffff6057557002af09481380a0a35cf1ba02ffffffffff605855700292c5bdd3b92ec810287b1b3fffffffff605955700277abdcdab07d5a77ac6d6b9fffffffff605a5570025daf6654b1eaa55fd64df5efffffffff605b55700244c49c648baa98192dce88b7ffffffff605c5570022ce03cd5619a311b2471268bffffffff605d55700215f77c045fbe885654a44a0fffffffff605e557001ffffffffffffffffffffffffffffffff605f557001eaefdbdaaee7421fc4d3ede5ffffffff6060557001d6bd8b2eb257df7e8ca57b09bfffffff6061557001c35fedd14b861eb0443f7f133fffffff6062557001b0ce43b322bcde4a56e8ada5afffffff60635570019f0028ec1fff007f5a195a39dfffffff60645570018ded91f0e72ee74f49b15ba527ffffff60655570017d8ec7f04136f4e5615fd41a63ffffff60665570016ddc6556cdb84bdc8d12d22e6fffffff60675570015ecf52776a1155b5bd8395814f7fffff60685570015060c256cb23b3b3cc3754cf40ffffff6069557001428a2f98d728ae223ddab715be3fffff606a5570013545598e5c23276ccf0ede68034fffff606b557001288c4161ce1d6f54b7f61081194fffff606c5570011c592761c666aa641d5a01a40f17ffff606d55700110a688680a7530515f3e6e6cfdcdffff606e557001056f1b5bedf75c6bcb2ce8aed428ffff606f556ffaadceceeff8a0890f3875f008277fff6070556ff05dc6b27edad306388a600f6ba0bfff6071556fe67a5a25da41063de1495d5b18cdbfff6072556fdcff115b14eedde6fc3aa5353f2e4fff6073556fd3e7a3924312399f9aae2e0f868f8fff6074556fcb2ff529eb71e41582cccd5a1ee26fff6075556fc2d415c3db974ab32a51840c0b67edff6076556fbad03e7d883f69ad5b0a186184e06bff6077556fb320d03b2c343d4829abd6075f0cc5ff6078556fabc25204e02828d73c6e80bcdb1a95bf6079556fa4b16f74ee4bb2040a1ec6c15fbbf2df607a556f9deaf736ac1f569deb1b5ae3f36c130f607b556f976bd9952c7aa957f5937d790ef65037607c556f9131271922eaa6064b73a22d0bd4f2bf607d556f8b380f3558668c46c91c49a2f8e967b9607e556f857ddf0117efa215952912839f6473e6607f55565b005b6100976108b43660046121da565b610a29565b6100976108c73660046121a8565b610a8c565b6100976108da3660046121a8565b610b0b565b6100976108ed3660046121da565b610b8d565b600080851161091c5760405162461bcd60e51b815260040161091390612206565b60405180910390fd5b6000841161093c5760405162461bcd60e51b81526004016109139061222e565b8482141561094b575082610996565b6000806109668761095c8682612272565b620f424088610bd1565b90925090508160ff821687901b61097d8289612289565b6109879190612272565b61099191906122be565b925050505b949350505050565b60008085116109bf5760405162461bcd60e51b815260040161091390612206565b600084116109df5760405162461bcd60e51b81526004016109139061222e565b6000806109fa6109ef87866122d2565b8787620f4240610bd1565b9092509050600060ff8216610a0f848a612289565b901c9050610a1d8882612272565b98975050505050505050565b6000620f4240831415610a4757610a4082856122be565b9050610a85565b600080610a5b866103e8620f424088610bd1565b909250905060ff811682901c620f4240610a758783612289565b610a7f91906122be565b93505050505b9392505050565b6000808511610aad5760405162461bcd60e51b815260040161091390612206565b60008411610acd5760405162461bcd60e51b81526004016109139061222e565b600080610ae8610add88866122d2565b88620f424088610bd1565b9092509050600060ff8216610afd8489612289565b901c9050610a1d8782612272565b6000808511610b2c5760405162461bcd60e51b815260040161091390612206565b60008411610b4c5760405162461bcd60e51b81526004016109139061222e565b83821415610b5b575083610996565b600080610b7686610b6c8682612272565b87620f4240610bd1565b90925090508160ff821688901b61097d828a612289565b6000620f4240831415610ba457610a408285612289565b600080610bc3610bb48588612289565b86620f424088620f4240610cb0565b60ff161c9695505050505050565b600080600160811b8610610be457600080fd5b60008086610bf66001607f1b8a612289565b610c0091906122be565b905070015bf0a8b1457695355fb8ac404e7a79e3811015610c2b57610c2481610d8f565b9150610c37565b610c3481611308565b91505b600085610c448885612289565b610c4e91906122be565b9050600160831b811015610c7357610c65816113f6565b607f94509450505050610ca7565b6000610c7e82611a21565b9050610c9a610c8e82607f612300565b60ff1683901c82611ad4565b95509350610ca792505050565b94509492505050565b600080600160811b8710610cc357600080fd5b600080876001607f1b610cd6898c612289565b610ce09190612289565b610cea91906122be565b905070015bf0a8b1457695355fb8ac404e7a79e3811015610d1557610d0e81610d8f565b9150610d21565b610d1e81611308565b91505b600085610d2e8885612289565b610d3891906122be565b9050600160831b811015610d5d57610d4f816113f6565b607f94509450505050610d85565b6000610d6882611a21565b9050610d78610c8e82607f612300565b95509350610d8592505050565b9550959350505050565b6000808080806fd3094c70f034de4b96ff7d5b6f99fcd88610610de857610dba6001607e1b856122d2565b93506fd3094c70f034de4b96ff7d5b6f99fcd8610ddb6001607f1b88612289565b610de591906122be565b95505b6fa45af1e1f40c333b3de1db4dd55f29a78610610e3b57610e0d6001607d1b856122d2565b93506fa45af1e1f40c333b3de1db4dd55f29a7610e2e6001607f1b88612289565b610e3891906122be565b95505b6f910b022db7ae67ce76b441c27035c6a18610610e8e57610e606001607c1b856122d2565b93506f910b022db7ae67ce76b441c27035c6a1610e816001607f1b88612289565b610e8b91906122be565b95505b6f88415abbe9a76bead8d00cf112e4d4a88610610ee157610eb36001607b1b856122d2565b93506f88415abbe9a76bead8d00cf112e4d4a8610ed46001607f1b88612289565b610ede91906122be565b95505b6f84102b00893f64c705e841d5d4064bd38610610f3457610f066001607a1b856122d2565b93506f84102b00893f64c705e841d5d4064bd3610f276001607f1b88612289565b610f3191906122be565b95505b6f8204055aaef1c8bd5c3259f4822735a28610610f8757610f59600160791b856122d2565b93506f8204055aaef1c8bd5c3259f4822735a2610f7a6001607f1b88612289565b610f8491906122be565b95505b6f810100ab00222d861931c15e39b44e998610610fda57610fac600160781b856122d2565b93506f810100ab00222d861931c15e39b44e99610fcd6001607f1b88612289565b610fd791906122be565b95505b6f808040155aabbbe9451521693554f733861061102d57610fff600160771b856122d2565b93506f808040155aabbbe9451521693554f7336110206001607f1b88612289565b61102a91906122be565b95505b61103b6001607f1b87612272565b92508291506001607f1b61104f8380612289565b61105991906122be565b9050600160801b61106a8482612272565b6110749084612289565b61107e91906122be565b61108890856122d2565b93506001607f1b6110998284612289565b6110a391906122be565b9150600160811b6110c4846faaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa612272565b6110ce9084612289565b6110d891906122be565b6110e290856122d2565b93506001607f1b6110f38284612289565b6110fd91906122be565b9150600360801b61111e846f99999999999999999999999999999999612272565b6111289084612289565b61113291906122be565b61113c90856122d2565b93506001607f1b61114d8284612289565b61115791906122be565b9150600160821b611178846f92492492492492492492492492492492612272565b6111829084612289565b61118c91906122be565b61119690856122d2565b93506001607f1b6111a78284612289565b6111b191906122be565b9150600560801b6111d2846f8e38e38e38e38e38e38e38e38e38e38e612272565b6111dc9084612289565b6111e691906122be565b6111f090856122d2565b93506001607f1b6112018284612289565b61120b91906122be565b9150600360811b61122c846f8ba2e8ba2e8ba2e8ba2e8ba2e8ba2e8b612272565b6112369084612289565b61124091906122be565b61124a90856122d2565b93506001607f1b61125b8284612289565b61126591906122be565b9150600760801b611286846f89d89d89d89d89d89d89d89d89d89d89612272565b6112909084612289565b61129a91906122be565b6112a490856122d2565b93506001607f1b6112b58284612289565b6112bf91906122be565b9150600160831b6112e0846f88888888888888888888888888888888612272565b6112ea9084612289565b6112f491906122be565b6112fe90856122d2565b9695505050505050565b600080600160801b831061134c57600061132e6113296001607f1b866122be565b61213b565b60ff811694851c94909150611348906001607f1b90612289565b9150505b6001607f1b8311156113c157607f5b60ff8116156113bf576001607f1b6113738580612289565b61137d91906122be565b9350600160801b84106113af57600193841c9361139a9082612300565b60ff166001901b826113ac91906122d2565b91505b6113b881612323565b905061135b565b505b6f05b9de1d10bf4103d647b0955897ba806113ec6f03f80fe03f80fe03f80fe03f80fe03f883612289565b610a8591906122be565b60008080806114096001607c1b86612340565b91508190506001607f1b61141d8280612289565b61142791906122be565b905061143b816710e1b3be415a0000612289565b61144590846122d2565b92506001607f1b6114568383612289565b61146091906122be565b9050611474816705a0913f6b1e0000612289565b61147e90846122d2565b92506001607f1b61148f8383612289565b61149991906122be565b90506114ad81670168244fdac78000612289565b6114b790846122d2565b92506001607f1b6114c88383612289565b6114d291906122be565b90506114e581664807432bc18000612289565b6114ef90846122d2565b92506001607f1b6115008383612289565b61150a91906122be565b905061151d81660c0135dca04000612289565b61152790846122d2565b92506001607f1b6115388383612289565b61154291906122be565b9050611555816601b707b1cdc000612289565b61155f90846122d2565b92506001607f1b6115708383612289565b61157a91906122be565b905061158c816536e0f639b800612289565b61159690846122d2565b92506001607f1b6115a78383612289565b6115b191906122be565b90506115c381650618fee9f800612289565b6115cd90846122d2565b92506001607f1b6115de8383612289565b6115e891906122be565b90506115f981649c197dcc00612289565b61160390846122d2565b92506001607f1b6116148383612289565b61161e91906122be565b905061162f81640e30dce400612289565b61163990846122d2565b92506001607f1b61164a8383612289565b61165491906122be565b90506116658164012ebd1300612289565b61166f90846122d2565b92506001607f1b6116808383612289565b61168a91906122be565b905061169a816317499f00612289565b6116a490846122d2565b92506001607f1b6116b58383612289565b6116bf91906122be565b90506116cf816301a9d480612289565b6116d990846122d2565b92506001607f1b6116ea8383612289565b6116f491906122be565b905061170381621c6380612289565b61170d90846122d2565b92506001607f1b61171e8383612289565b61172891906122be565b9050611737816201c638612289565b61174190846122d2565b92506001607f1b6117528383612289565b61175c91906122be565b905061176a81611ab8612289565b61177490846122d2565b92506001607f1b6117858383612289565b61178f91906122be565b905061179d8161017c612289565b6117a790846122d2565b92506001607f1b6117b88383612289565b6117c291906122be565b90506117cf816014612289565b6117d990846122d2565b92506001607f1b6117ea8383612289565b6117f491906122be565b9050611801816001612289565b61180b90846122d2565b92506001607f1b826118256721c3677c82b40000866122be565b61182f91906122d2565b61183991906122d2565b92506001607c1b8516156118815770018ebef9eac820ae8682b9793ac6d1e776611874847001c3d6a24ed82218787d624d3e5eba95f9612289565b61187e91906122be565b92505b6001607d1b8516156118c7577001368b2fc6f9609fe7aceb46aa619baed46118ba8470018ebef9eac820ae8682b9793ac6d1e778612289565b6118c491906122be565b92505b6001607e1b85161561190c576fbc5ab1b16779be3575bd8f0520a9f21f6118ff847001368b2fc6f9609fe7aceb46aa619baed5612289565b61190991906122be565b92505b6001607f1b851615611950576f454aaa8efe072e7f6ddbab84b40a55c9611943846fbc5ab1b16779be3575bd8f0520a9f21e612289565b61194d91906122be565b92505b600160801b851615611994576f0960aadc109e7a3bf4578099615711ea611987846f454aaa8efe072e7f6ddbab84b40a55c5612289565b61199191906122be565b92505b600160811b8516156119d7576e2bf84208204f5977f9a8cf01fdce3d6119ca846f0960aadc109e7a3bf4578099615711d7612289565b6119d491906122be565b92505b600160821b851615611a18576d03c6ab775dd0b95b4cbee7e65d11611a0b846e2bf84208204f5977f9a8cf01fdc307612289565b611a1591906122be565b92505b50909392505050565b60006020607f5b60ff8116611a37836001612354565b60ff161015611a8a5760006002611a4e8385612354565b611a589190612379565b90508460008260ff1660808110611a7157611a716122ea565b015410611a8057809250611a84565b8091505b50611a28565b8360008260ff1660808110611aa157611aa16122ea565b015410611aaf579392505050565b8360008360ff1660808110611ac657611ac66122ea565b015410610088575092915050565b6000828160ff8416611ae68380612289565b901c9150611b04826f03442c4e6074a82f1797f72ac0000000612289565b611b0e90826122d2565b905060ff8416611b1e8684612289565b901c9150611b3c826f0116b96f757c380fb287fd0e40000000612289565b611b4690826122d2565b905060ff8416611b568684612289565b901c9150611b73826e45ae5bdd5f0e03eca1ff4390000000612289565b611b7d90826122d2565b905060ff8416611b8d8684612289565b901c9150611baa826e0defabf91302cd95b9ffda50000000612289565b611bb490826122d2565b905060ff8416611bc48684612289565b901c9150611be1826e02529ca9832b22439efff9b8000000612289565b611beb90826122d2565b905060ff8416611bfb8684612289565b901c9150611c17826d54f1cf12bd04e516b6da88000000612289565b611c2190826122d2565b905060ff8416611c318684612289565b901c9150611c4d826d0a9e39e257a09ca2d6db51000000612289565b611c5790826122d2565b905060ff8416611c678684612289565b901c9150611c83826d012e066e7b839fa050c309000000612289565b611c8d90826122d2565b905060ff8416611c9d8684612289565b901c9150611cb8826c1e33d7d926c329a1ad1a800000612289565b611cc290826122d2565b905060ff8416611cd28684612289565b901c9150611ced826c02bee513bdb4a6b19b5f800000612289565b611cf790826122d2565b905060ff8416611d078684612289565b901c9150611d21826b3a9316fa79b88eccf2a00000612289565b611d2b90826122d2565b905060ff8416611d3b8684612289565b901c9150611d55826b048177ebe1fa812375200000612289565b611d5f90826122d2565b905060ff8416611d6f8684612289565b901c9150611d88826a5263fe90242dcbacf00000612289565b611d9290826122d2565b905060ff8416611da28684612289565b901c9150611dbb826a057e22099c030d94100000612289565b611dc590826122d2565b905060ff8416611dd58684612289565b901c9150611ded826957e22099c030d9410000612289565b611df790826122d2565b905060ff8416611e078684612289565b901c9150611e1f8269052b6b54569976310000612289565b611e2990826122d2565b905060ff8416611e398684612289565b901c9150611e5082684985f67696bf748000612289565b611e5a90826122d2565b905060ff8416611e6a8684612289565b901c9150611e81826803dea12ea99e498000612289565b611e8b90826122d2565b905060ff8416611e9b8684612289565b901c9150611eb1826731880f2214b6e000612289565b611ebb90826122d2565b905060ff8416611ecb8684612289565b901c9150611ee18267025bcff56eb36000612289565b611eeb90826122d2565b905060ff8416611efb8684612289565b901c9150611f1082661b722e10ab1000612289565b611f1a90826122d2565b905060ff8416611f2a8684612289565b901c9150611f3f826601317c70077000612289565b611f4990826122d2565b905060ff8416611f598684612289565b901c9150611f6d82650cba84aafa00612289565b611f7790826122d2565b905060ff8416611f878684612289565b901c9150611f9a826482573a0a00612289565b611fa490826122d2565b905060ff8416611fb48684612289565b901c9150611fc7826405035ad900612289565b611fd190826122d2565b905060ff8416611fe18684612289565b901c9150611ff382632f881b00612289565b611ffd90826122d2565b905060ff841661200d8684612289565b901c915061201f826301b29340612289565b61202990826122d2565b905060ff84166120398684612289565b901c915061204a82620efc40612289565b61205490826122d2565b905060ff84166120648684612289565b901c915061207482617fe0612289565b61207e90826122d2565b905060ff841661208e8684612289565b901c915061209e82610420612289565b6120a890826122d2565b905060ff84166120b88684612289565b901c91506120c7826021612289565b6120d190826122d2565b905060ff84166120e18684612289565b901c91506120f0826001612289565b6120fa90826122d2565b9050600160ff85161b8561211e6f0688589cc0e9505e2f2fee5580000000846122be565b61212891906122d2565b61213291906122d2565b95945050505050565b60008061010083101561216e575b600183111561216957600192831c926121629082612354565b9050612149565b6121a2565b60805b60ff8116156121a057600160ff82161b84106121955760ff81169390931c92908117905b60011c607f16612171565b505b92915050565b600080600080608085870312156121be57600080fd5b5050823594602084013594506040840135936060013592509050565b6000806000606084860312156121ef57600080fd5b505081359360208301359350604090920135919050565b6020808252600e908201526d494e56414c49445f535550504c5960901b604082015260600190565b602080825260149082015273494e56414c49445f504f4f4c5f42414c414e434560601b604082015260600190565b634e487b7160e01b600052601160045260246000fd5b6000828210156122845761228461225c565b500390565b60008160001904831182151516156122a3576122a361225c565b500290565b634e487b7160e01b600052601260045260246000fd5b6000826122cd576122cd6122a8565b500490565b600082198211156122e5576122e561225c565b500190565b634e487b7160e01b600052603260045260246000fd5b600060ff821660ff84168082101561231a5761231a61225c565b90039392505050565b600060ff8216806123365761233661225c565b6000190192915050565b60008261234f5761234f6122a8565b500690565b600060ff821660ff84168060ff038211156123715761237161225c565b019392505050565b600060ff83168061238c5761238c6122a8565b8060ff8416049150509291505056fea264697066735822122049536cca63d3a3e41cbec36f589b83bbec161583c1ccdc046380ba58949d086764736f6c634300080b003360e060405234801561001057600080fd5b5060405161392638038061392683398101604081905261002f916101c5565b6001600160a01b03811660c0526040516000903090839061004f906101ab565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015610082573d6000803e3d6000fd5b509050600030604051610094906101b8565b6001600160a01b039091168152602001604051809103906000f0801580156100c0573d6000803e3d6000fd5b506001600160a01b0380841660a08190529082166080819052604051631745ff0560e31b8152929350909163ba2ff82891610111916203b2f891660292ad53ffa0a1916000919030906004016101f5565b600060405180830381600087803b15801561012b57600080fd5b505af115801561013f573d6000803e3d6000fd5b505060a051604051635c6d8da160e01b81526001600160a01b0385169350635c6d8da192506101719190600401610272565b600060405180830381600087803b15801561018b57600080fd5b505af115801561019f573d6000803e3d6000fd5b505050505050506102f8565b611c478061096f83390190565b611370806125b683390190565b6000602082840312156101d757600080fd5b81516001600160a01b03811681146101ee57600080fd5b9392505050565b60e08152600061021a60e083016005815264566572736560d81b602082015260400190565b828103602084015261023e816005815264564552534560d81b602082015260400190565b60408401989098525050606081019490945260808401929092526001600160a01b0390811660a08401521660c09091015290565b608081526000610297608083016005815264566572736560d81b602082015260400190565b82810360208401526102bb816005815264564552534560d81b602082015260400190565b83810360408086019190915260098252683b32b939b2973c3cbd60b91b60208301526001600160a01b039590951660609094019390935250500190565b60805160a05160c05161063d610332600039600060f401526000818160cd01526101b5015260008181605601526101e0015261063d6000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80631376917e1461005157806333785e6614610095578063ceda8d19146100c8578063eff1d50e146100ef575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100a86100a3366004610416565b610116565b604080516001600160a01b0393841681529290911660208301520161008c565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6000806127108511156101655760405162461bcd60e51b8152602060048201526012602482015271494e56414c49445f50455243454e5441474560701b60448201526064015b60405180910390fd5b620f42408711156101b05760405162461bcd60e51b8152602060048201526015602482015274494e56414c49445f524553455256455f524154494f60581b604482015260640161015c565b6101d97f0000000000000000000000000000000000000000000000000000000000000000610330565b91506102047f0000000000000000000000000000000000000000000000000000000000000000610330565b604051631745ff0560e31b81529091506001600160a01b0383169063ba2ff82890610243908e908e908e908e908e908e908e908b9033906004016104f8565b600060405180830381600087803b15801561025d57600080fd5b505af1158015610271573d6000803e3d6000fd5b5050604051635c6d8da160e01b81526001600160a01b0384169250635c6d8da191506102ad908e908e908e908e908b908b908b90600401610558565b600060405180830381600087803b1580156102c757600080fd5b505af11580156102db573d6000803e3d6000fd5b505050507f9fa1bc5d68987c46217fddf4d66e89bfbaa5b4547adab672d47567ceceac41fa82828d8d8d8d3360405161031a97969594939291906105b1565b60405180910390a1995099975050505050505050565b6000604051733d602d80600a3d3981f3363d3d373d3d3d363d7360601b81528260601b60148201526e5af43d82803e903d91602b57fd5bf360881b60288201526037816000f09150506001600160a01b0381166103c85760405162461bcd60e51b8152602060048201526016602482015275115490cc4c4d8dce8818dc99585d194819985a5b195960521b604482015260640161015c565b919050565b60008083601f8401126103df57600080fd5b50813567ffffffffffffffff8111156103f757600080fd5b60208301915083602082850101111561040f57600080fd5b9250929050565b600080600080600080600080600060c08a8c03121561043457600080fd5b893567ffffffffffffffff8082111561044c57600080fd5b6104588d838e016103cd565b909b50995060208c013591508082111561047157600080fd5b61047d8d838e016103cd565b909950975060408c0135965060608c0135955060808c0135945060a08c01359150808211156104ab57600080fd5b506104b88c828d016103cd565b915080935050809150509295985092959850929598565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60e08152600061050c60e083018b8d6104cf565b828103602084015261051f818a8c6104cf565b60408401989098525050606081019490945260808401929092526001600160a01b0390811660a08401521660c090910152949350505050565b60808152600061056c60808301898b6104cf565b828103602084015261057f81888a6104cf565b905082810360408401526105948186886104cf565b91505060018060a01b038316606083015298975050505050505050565b600060018060a01b03808a168352808916602084015260a060408401526105dc60a08401888a6104cf565b83810360608501526105ef8187896104cf565b9250508084166080840152509897505050505050505056fea26469706673582212200555d48794139e3139d6156d5d5b61192a3a8e7e15b51d9fb6efe99c6300a9a664736f6c634300080b003361012060405260016006553480156200001757600080fd5b5060405162001c4738038062001c478339810160408190526200003a916200023a565b60405180604001604052806005815260200164566572736560d81b81525060405180604001604052806005815260200164564552534560d81b815250601282600090805190602001906200009092919062000177565b508151620000a690600190602085019062000177565b5060ff81166080524660a052620000bc620000db565b60c0525050506001600160a01b0391821660e052166101005262000353565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516200010f9190620002af565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001859062000272565b90600052602060002090601f016020900481019282620001a95760008555620001f4565b82601f10620001c457805160ff1916838001178555620001f4565b82800160010185558215620001f4579182015b82811115620001f4578251825591602001919060010190620001d7565b506200020292915062000206565b5090565b5b8082111562000202576000815560010162000207565b80516001600160a01b03811681146200023557600080fd5b919050565b600080604083850312156200024e57600080fd5b62000259836200021d565b915062000269602084016200021d565b90509250929050565b600181811c908216806200028757607f821691505b60208210811415620002a957634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620002cc57607f831692505b6020808410821415620002ed57634e487b7160e01b86526022600452602486fd5b818015620003045760018114620003165762000345565b60ff1986168952848901965062000345565b60008a81526020902060005b868110156200033d5781548b82015290850190830162000322565b505084890196505b509498975050505050505050565b60805160a05160c05160e05161010051611893620003b46000396000818161046101528181610cca01528181610f6201526110610152600081816103a20152610762015260006106c20152600061068d0152600061024b01526118936000f3fe60806040526004361061014b5760003560e01c8063a9059cbb116100b6578063d79875eb1161006f578063d79875eb146103e4578063d96a094a14610404578063dd62ed3e14610417578063eff1d50e1461044f578063f4021e3d14610483578063f60e8c2b1461049957600080fd5b8063a9059cbb14610319578063ad8c867314610339578063ba2ff82814610359578063be040fb01461037b578063c45a015514610390578063d505accf146103c457600080fd5b8063313ce56711610108578063313ce567146102395780633644e5151461027f57806370a08231146102945780637ecebe00146102c157806395d89b41146102ee57806396365d441461030357600080fd5b806302d05d3f1461015057806306fdde031461018d578063095ea7b3146101af5780630c7d5cd8146101df57806318160ddd1461020357806323b872dd14610219575b600080fd5b34801561015c57600080fd5b50600754610170906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019957600080fd5b506101a26104af565b60405161018491906113f8565b3480156101bb57600080fd5b506101cf6101ca366004611469565b61053d565b6040519015158152602001610184565b3480156101eb57600080fd5b506101f560095481565b604051908152602001610184565b34801561020f57600080fd5b506101f560025481565b34801561022557600080fd5b506101cf610234366004611493565b6105a9565b34801561024557600080fd5b5061026d7f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610184565b34801561028b57600080fd5b506101f5610689565b3480156102a057600080fd5b506101f56102af3660046114cf565b60036020526000908152604090205481565b3480156102cd57600080fd5b506101f56102dc3660046114cf565b60056020526000908152604090205481565b3480156102fa57600080fd5b506101a26106e4565b34801561030f57600080fd5b506101f5600b5481565b34801561032557600080fd5b506101cf610334366004611469565b6106f1565b34801561034557600080fd5b50600854610170906001600160a01b031681565b34801561036557600080fd5b5061037961037436600461153a565b610757565b005b34801561038757600080fd5b5061037961081e565b34801561039c57600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d057600080fd5b506103796103df3660046115e6565b610925565b3480156103f057600080fd5b506103796103ff366004611659565b610b76565b61037961041236600461167b565b610e4a565b34801561042357600080fd5b506101f5610432366004611694565b600460209081526000928352604080842090915290825290205481565b34801561045b57600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b34801561048f57600080fd5b506101f5600c5481565b3480156104a557600080fd5b506101f5600a5481565b600080546104bc906116c7565b80601f01602080910402602001604051908101604052809291908181526020018280546104e8906116c7565b80156105355780601f1061050a57610100808354040283529160200191610535565b820191906000526020600020905b81548152906001019060200180831161051857829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906105989086815260200190565b60405180910390a350600192915050565b6001600160a01b03831660009081526004602090815260408083203384529091528120546000198114610605576105e08382611718565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b0385166000908152600360205260408120805485929061062d908490611718565b90915550506001600160a01b038085166000818152600360205260409081902080548701905551909187169060008051602061183e833981519152906106769087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146106bf576106ba611190565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b600180546104bc906116c7565b33600090815260036020526040812080548391908390610712908490611718565b90915550506001600160a01b0383166000818152600360205260409081902080548501905551339060008051602061183e833981519152906105989086815260200190565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107c35760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b60448201526064015b60405180910390fd5b6107cf60008a8a61135f565b506107dc6001888861135f565b50600994909455600a92909255600c55600880546001600160a01b039283166001600160a01b0319918216179091556007805492909316911617905550505050565b33600090815260036020526040902054670de0b6b3a7640000111561087c5760405162461bcd60e51b8152602060048201526014602482015273494e53554646494349454e545f42414c414e434560601b60448201526064016107ba565b60085461089a906001600160a01b0316670de0b6b3a76400006106f1565b506008546040516335313c2160e11b81523360048201526001600160a01b0390911690636a62784290602401600060405180830381600087803b1580156108e057600080fd5b505af11580156108f4573d6000803e3d6000fd5b50506040513392507fd1b5ea7fe0f1c2fa09d49c2aa9b2200664ba57a734f1d95481d95b7f99af991c9150600090a2565b428410156109755760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064016107ba565b600061097f610689565b6001600160a01b0389811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938c166060840152608083018b905260a083019390935260c08083018a90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa158015610a98573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610ace5750886001600160a01b0316816001600160a01b0316145b610b0b5760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b60448201526064016107ba565b6001600160a01b0390811660009081526004602090815260408083208b8516808552908352928190208a905551898152919350918a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60008211610bbc5760405162461bcd60e51b81526020600482015260136024820152721253959053125117d4d1531317d05353d55395606a1b60448201526064016107ba565b33600090815260036020526040902054821115610c125760405162461bcd60e51b8152602060048201526014602482015273494e53554646494349454e545f42414c414e434560601b60448201526064016107ba565b6000600b5411610c645760405162461bcd60e51b815260206004820152601960248201527f494e53554646494349454e545f504f4f4c5f42414c414e43450000000000000060448201526064016107ba565b60008111610ca75760405162461bcd60e51b815260206004820152601060248201526f494e56414c49445f534c49505041474560801b60448201526064016107ba565b600254600b546009546040516340e1d71d60e11b81526000936001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016936381c3ae3a93610d1593899060040193845260208401929092526040830152606082015260800190565b6020604051808303816000875af1158015610d34573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d58919061172f565b90506000610d658261122a565b90506000610d738284611718565b905083811015610db05760405162461bcd60e51b8152602060048201526008602482015267534c49505041474560c01b60448201526064016107ba565b610dba338661124d565b82600b6000828254610dcc9190611718565b90915550610ddc905033826112b7565b600754610df2906001600160a01b0316836112b7565b600b5460025460408051928352602083019190915281018690526060810184905233907f483f8aec0fd892ac72ad1ba8d0e9c9e73db59c12d263fd71de480b5b3deeae3c906080015b60405180910390a25050505050565b60003411610e8a5760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f56414c554560981b60448201526064016107ba565b60008111610ecd5760405162461bcd60e51b815260206004820152601060248201526f494e56414c49445f534c49505041474560801b60448201526064016107ba565b346000610ed98261122a565b90506000610ee78284611718565b9050600060025460001480610efc5750600b54155b156110255766038d7ea4c68000821015610f585760405162461bcd60e51b815260206004820152601a60248201527f494e53554646494349454e545f494e495449414c5f505249434500000000000060448201526064016107ba565b6001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001663d47d2a76610f9866038d7ea4c6800085611748565b600954600a546040516001600160e01b031960e086901b168152600481019390935260248301919091526044820152606401602060405180830381865afa158015610fe7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061100b919061172f565b905061101e8166038d7ea4c6800061176a565b90506110d1565b600254600b5460095460405163257bb54960e21b8152600481019390935260248301919091526044820152606481018390526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906395eed524906084016020604051808303816000875af11580156110aa573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110ce919061172f565b90505b8481101561110c5760405162461bcd60e51b8152602060048201526008602482015267534c49505041474560c01b60448201526064016107ba565b611116338261130d565b81600b60008282546111289190611789565b9091555050600754611143906001600160a01b0316846112b7565b600b5460025460408051928352602083019190915281018290526060810183905233907f064fb1933e186be0b289a87e98518dc18cc9856ecbc9f1353d1a138ddf733ec590608001610e3b565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516111c291906117a1565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6000612710600c548361123d919061176a565b6112479190611748565b92915050565b6001600160a01b03821660009081526003602052604081208054839290611275908490611718565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061183e833981519152906020015b60405180910390a35050565b600080600080600085875af19050806113085760405162461bcd60e51b815260206004820152601360248201527211551217d514905394d1915497d19052531151606a1b60448201526064016107ba565b505050565b806002600082825461131f9190611789565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061183e83398151915291016112ab565b82805461136b906116c7565b90600052602060002090601f01602090048101928261138d57600085556113d3565b82601f106113a65782800160ff198235161785556113d3565b828001600101855582156113d3579182015b828111156113d35782358255916020019190600101906113b8565b506113df9291506113e3565b5090565b5b808211156113df57600081556001016113e4565b600060208083528351808285015260005b8181101561142557858101830151858201604001528201611409565b81811115611437576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b038116811461146457600080fd5b919050565b6000806040838503121561147c57600080fd5b6114858361144d565b946020939093013593505050565b6000806000606084860312156114a857600080fd5b6114b18461144d565b92506114bf6020850161144d565b9150604084013590509250925092565b6000602082840312156114e157600080fd5b6114ea8261144d565b9392505050565b60008083601f84011261150357600080fd5b50813567ffffffffffffffff81111561151b57600080fd5b60208301915083602082850101111561153357600080fd5b9250929050565b600080600080600080600080600060e08a8c03121561155857600080fd5b893567ffffffffffffffff8082111561157057600080fd5b61157c8d838e016114f1565b909b50995060208c013591508082111561159557600080fd5b506115a28c828d016114f1565b90985096505060408a0135945060608a0135935060808a013592506115c960a08b0161144d565b91506115d760c08b0161144d565b90509295985092959850929598565b600080600080600080600060e0888a03121561160157600080fd5b61160a8861144d565b96506116186020890161144d565b95506040880135945060608801359350608088013560ff8116811461163c57600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561166c57600080fd5b50508035926020909101359150565b60006020828403121561168d57600080fd5b5035919050565b600080604083850312156116a757600080fd5b6116b08361144d565b91506116be6020840161144d565b90509250929050565b600181811c908216806116db57607f821691505b602082108114156116fc57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561172a5761172a611702565b500390565b60006020828403121561174157600080fd5b5051919050565b60008261176557634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561178457611784611702565b500290565b6000821982111561179c5761179c611702565b500190565b600080835481600182811c9150808316806117bd57607f831692505b60208084108214156117dd57634e487b7160e01b86526022600452602486fd5b8180156117f157600181146118025761182f565b60ff1986168952848901965061182f565b60008a81526020902060005b868110156118275781548b82015290850190830161180e565b505084890196505b50949897505050505050505056feddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220b48e86f98cc39b3c1f1341cdcdb854c60e31ab51d6b9f66b9aa33d2627f33be864736f6c634300080b003360a06040523480156200001157600080fd5b506040516200137038038062001370833981016040819052620000349162000159565b60405180604001604052806005815260200164566572736560d81b81525060405180604001604052806005815260200164564552534560d81b815250816000908051906020019062000088929190620000b3565b5080516200009e906001906020840190620000b3565b5050506001600160a01b0316608052620001c8565b828054620000c1906200018b565b90600052602060002090601f016020900481019282620000e5576000855562000130565b82601f106200010057805160ff191683800117855562000130565b8280016001018555821562000130579182015b828111156200013057825182559160200191906001019062000113565b506200013e92915062000142565b5090565b5b808211156200013e576000815560010162000143565b6000602082840312156200016c57600080fd5b81516001600160a01b03811681146200018457600080fd5b9392505050565b600181811c90821680620001a057607f821691505b60208210811415620001c257634e487b7160e01b600052602260045260246000fd5b50919050565b608051611185620001eb6000396000818161028c015261076f01526111856000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80636c0360eb116100a2578063b88d4fde11610071578063b88d4fde14610274578063c45a015514610287578063c87b56dd146102ae578063d2f7265a146102c1578063e985e9c5146102d457600080fd5b80636c0360eb1461022357806370a082311461022b57806395d89b4114610259578063a22cb4651461026157600080fd5b806323b872dd116100e957806323b872dd146101ae57806342842e0e146101c15780635c6d8da1146101d45780636352211e146101e75780636a6278421461021057600080fd5b806301ffc9a71461011b57806306fdde0314610143578063081812fc14610158578063095ea7b314610199575b600080fd5b61012e610129366004610cd7565b610302565b60405190151581526020015b60405180910390f35b61014b610354565b60405161013a9190610d48565b610181610166366004610d5b565b6004602052600090815260409020546001600160a01b031681565b6040516001600160a01b03909116815260200161013a565b6101ac6101a7366004610d90565b6103e2565b005b6101ac6101bc366004610dba565b6104c9565b6101ac6101cf366004610dba565b61066c565b6101ac6101e2366004610e3f565b610764565b6101816101f5366004610d5b565b6003602052600090815260409020546001600160a01b031681565b6101ac61021e366004610eea565b61082b565b61014b6108bc565b61024b610239366004610eea565b60026020526000908152604090205481565b60405190815260200161013a565b61014b6108c9565b6101ac61026f366004610f05565b6108d6565b6101ac610282366004610f57565b610942565b6101817f000000000000000000000000000000000000000000000000000000000000000081565b61014b6102bc366004610d5b565b610a27565b600654610181906001600160a01b031681565b61012e6102e2366004611033565b600560209081526000928352604080842090915290825290205460ff1681565b60006301ffc9a760e01b6001600160e01b03198316148061033357506380ac58cd60e01b6001600160e01b03198316145b8061034e5750635b5e139f60e01b6001600160e01b03198316145b92915050565b6000805461036190611066565b80601f016020809104026020016040519081016040528092919081815260200182805461038d90611066565b80156103da5780601f106103af576101008083540402835291602001916103da565b820191906000526020600020905b8154815290600101906020018083116103bd57829003601f168201915b505050505081565b6000818152600360205260409020546001600160a01b03163381148061042b57506001600160a01b038116600090815260056020908152604080832033845290915290205460ff165b61046d5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b60448201526064015b60405180910390fd5b60008281526004602052604080822080546001600160a01b0319166001600160a01b0387811691821790925591518593918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a4505050565b6000818152600360205260409020546001600160a01b0384811691161461051f5760405162461bcd60e51b815260206004820152600a60248201526957524f4e475f46524f4d60b01b6044820152606401610464565b6001600160a01b0382166105455760405162461bcd60e51b8152600401610464906110a1565b336001600160a01b038416148061057257506000818152600460205260409020546001600160a01b031633145b806105a057506001600160a01b038316600090815260056020908152604080832033845290915290205460ff165b6105dd5760405162461bcd60e51b815260206004820152600e60248201526d1393d517d055551213d49256915160921b6044820152606401610464565b6001600160a01b0380841660008181526002602090815260408083208054600019019055938616808352848320805460010190558583526003825284832080546001600160a01b03199081168317909155600490925284832080549092169091559251849392917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b6106778383836104c9565b6001600160a01b0382163b15806107205750604051630a85bd0160e11b8082523360048301526001600160a01b03858116602484015260448301849052608060648401526000608484015290919084169063150b7a029060a4016020604051808303816000875af11580156106f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061071491906110cc565b6001600160e01b031916145b61075f5760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610464565b505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107cb5760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610464565b6107d760008888610c28565b506107e460018686610c28565b506107f160078484610c28565b50600680546001600160a01b0319166001600160a01b0383161790556008805490600061081d836110e9565b919050555050505050505050565b6006546001600160a01b031633146108745760405162461bcd60e51b815260206004820152600c60248201526b15539055551213d49256915160a21b6044820152606401610464565b6001600160a01b03811661089a5760405162461bcd60e51b8152600401610464906110a1565b600880546108b99183919060006108b0836110e9565b91905055610b41565b50565b6007805461036190611066565b6001805461036190611066565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61094d8484846104c9565b6001600160a01b0383163b15806109e25750604051630a85bd0160e11b808252906001600160a01b0385169063150b7a0290610993903390899088908890600401611112565b6020604051808303816000875af11580156109b2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d691906110cc565b6001600160e01b031916145b610a215760405162461bcd60e51b815260206004820152601060248201526f155394d0519157d49150d2541251539560821b6044820152606401610464565b50505050565b6000818152600360205260409020546060906001600160a01b0316610a855760405162461bcd60e51b81526020600482015260146024820152731513d2d15397d113d154d7d393d517d1561254d560621b6044820152606401610464565b600060078054610a9490611066565b905011610ab0576040518060200160405280600081525061034e565b60078054610abd90611066565b80601f0160208091040260200160405190810160405280929190818152602001828054610ae990611066565b8015610b365780601f10610b0b57610100808354040283529160200191610b36565b820191906000526020600020905b815481529060010190602001808311610b1957829003601f168201915b505050505092915050565b6001600160a01b038216610b675760405162461bcd60e51b8152600401610464906110a1565b6000818152600360205260409020546001600160a01b031615610bbd5760405162461bcd60e51b815260206004820152600e60248201526d1053149150511657d3525395115160921b6044820152606401610464565b6001600160a01b038216600081815260026020908152604080832080546001019055848352600390915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b828054610c3490611066565b90600052602060002090601f016020900481019282610c565760008555610c9c565b82601f10610c6f5782800160ff19823516178555610c9c565b82800160010185558215610c9c579182015b82811115610c9c578235825591602001919060010190610c81565b50610ca8929150610cac565b5090565b5b80821115610ca85760008155600101610cad565b6001600160e01b0319811681146108b957600080fd5b600060208284031215610ce957600080fd5b8135610cf481610cc1565b9392505050565b6000815180845260005b81811015610d2157602081850181015186830182015201610d05565b81811115610d33576000602083870101525b50601f01601f19169290920160200192915050565b602081526000610cf46020830184610cfb565b600060208284031215610d6d57600080fd5b5035919050565b80356001600160a01b0381168114610d8b57600080fd5b919050565b60008060408385031215610da357600080fd5b610dac83610d74565b946020939093013593505050565b600080600060608486031215610dcf57600080fd5b610dd884610d74565b9250610de660208501610d74565b9150604084013590509250925092565b60008083601f840112610e0857600080fd5b50813567ffffffffffffffff811115610e2057600080fd5b602083019150836020828501011115610e3857600080fd5b9250929050565b60008060008060008060006080888a031215610e5a57600080fd5b873567ffffffffffffffff80821115610e7257600080fd5b610e7e8b838c01610df6565b909950975060208a0135915080821115610e9757600080fd5b610ea38b838c01610df6565b909750955060408a0135915080821115610ebc57600080fd5b50610ec98a828b01610df6565b9094509250610edc905060608901610d74565b905092959891949750929550565b600060208284031215610efc57600080fd5b610cf482610d74565b60008060408385031215610f1857600080fd5b610f2183610d74565b915060208301358015158114610f3657600080fd5b809150509250929050565b634e487b7160e01b600052604160045260246000fd5b60008060008060808587031215610f6d57600080fd5b610f7685610d74565b9350610f8460208601610d74565b925060408501359150606085013567ffffffffffffffff80821115610fa857600080fd5b818701915087601f830112610fbc57600080fd5b813581811115610fce57610fce610f41565b604051601f8201601f19908116603f01168101908382118183101715610ff657610ff6610f41565b816040528281528a602084870101111561100f57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b6000806040838503121561104657600080fd5b61104f83610d74565b915061105d60208401610d74565b90509250929050565b600181811c9082168061107a57607f821691505b6020821081141561109b57634e487b7160e01b600052602260045260246000fd5b50919050565b6020808252601190820152701253959053125117d49150d25412515395607a1b604082015260600190565b6000602082840312156110de57600080fd5b8151610cf481610cc1565b600060001982141561110b57634e487b7160e01b600052601160045260246000fd5b5060010190565b6001600160a01b038581168252841660208201526040810183905260806060820181905260009061114590830184610cfb565b969550505050505056fea2646970667358221220ed55182bc2567c279b7de0a41e277e9355da0fc562e3e738c4cd2b13a3b8944e64736f6c634300080b0033a26469706673582212200fe400d0301ac1ccb59d8d9bf06cd1d1caec7bf9ad37d934faa2863851acfb8c64736f6c634300080b0033",
    "sourceMap": "240:4547:15:-:0;;;1573:26:0;;;-1:-1:-1;;1573:26:0;1595:4;1573:26;;;240:4547:15;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "240:4547:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4402:140;;;;;;;;;;;;;:::i;:::-;;464:604;;;;;;;;;;;;;:::i;2060:159::-;;;;;;;;;;;;;:::i;1540:167::-;;;;;;;;;;;;;:::i;3597:168::-;;;;;;;;;;;;;:::i;2271:188::-;;;;;;;;;;;;;:::i;4548:201::-;;;;;;;;;;;;;:::i;2518:167::-;;;;;;;;;;;;;:::i;4094:302::-;;;;;;;;;;;;;:::i;3772:316::-;;;;;;;;;;;;;:::i;1774:234::-;;;;;;;;;;;;;:::i;1605:18:0:-;;;;;;;;;;-1:-1:-1;1605:18:0;;;;;;;;;;;;;;179:14:18;;172:22;154:41;;142:2;127:18;1605::0;;;;;;;3416:175:15;;;;;;;;;;;;;:::i;2768:162::-;;;;;;;;;;;;;:::i;2980:230::-;;;;;;;;;;;;;:::i;3246:164::-;;;;;;;;;;;;;:::i;1573:26:0:-;;;;;;;;;;-1:-1:-1;1573:26:0;;;;;;;;1133:342:15;;;;;;;;;;-1:-1:-1;1133:342:15;;;;;:::i;:::-;;:::i;4402:140::-;4442:2;;:25;;-1:-1:-1;;;4442:25:15;;4464:1;4442:25;;;2376:51:18;4442:2:15;;;;-1:-1:-1;;;;;4442:2:15;;:13;;2349:18:18;;4442:25:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4477:8:15;;:31;;-1:-1:-1;;;4477:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;4477:8:15;;;;-1:-1:-1;4477:12:15;;-1:-1:-1;4497:7:15;;2565:18:18;;4477:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4518:8:15;;:17;;;-1:-1:-1;;;4518:17:15;;;;-1:-1:-1;;;;;4518:8:15;;;;-1:-1:-1;4518:15:15;;-1:-1:-1;4518:17:15;;;;;-1:-1:-1;4518:8:15;;:17;;;;;;:8;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4402:140::o;464:604::-;521:2;:51;;-1:-1:-1;;;;;;521:51:15;;;;;641:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;626:12:15;:33;;-1:-1:-1;;;;;;626:33:15;-1:-1:-1;;;;;626:33:15;;;;;;;;;683:38;;;;;:::i;:::-;-1:-1:-1;;;;;2394:32:18;;;2376:51;;2364:2;2349:18;683:38:15;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;669:11:15;:52;;-1:-1:-1;;;;;;669:52:15;-1:-1:-1;;;;;669:52:15;;;;;;;;;771:79;;-1:-1:-1;;;771:79:15;;3161:3:18;771:79:15;;;3143:22:18;3202:1;3181:19;;;3174:30;;;-1:-1:-1;;;3220:19:18;;;3213:36;3268:3;3287:20;;;3280:32;3328:18;;;3321:29;-1:-1:-1;;;3366:19:18;;;3359:36;808:6:15;3433:18:18;;;3426:34;816:15:15;3476:18:18;;;3469:34;833:3:15;3519:19:18;;;3512:35;3414:3;3563:19;;;3556:31;3623:1;3603:18;;;3596:29;-1:-1:-1;;;3641:19:18;;;3634:40;771:18:15;;3691:19:18;;771:79:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;749:18;731:119;;-1:-1:-1;;;;;731:119:15;;;-1:-1:-1;;;;;;731:119:15;;;;;;;;732:15;731:119;;;;;;;;;;;;860:8;:36;;;;;;;;;;906:11;:45;;;;;;;;-1:-1:-1;991:2:15;:30;;-1:-1:-1;;;991:30:15;;-1:-1:-1;991:30:15;;;4313:51:18;;;;1011:9:15;4380:18:18;;;4373:34;991:2:15;;;;;:7;;4286:18:18;;991:30:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1031:2:15;;:30;;-1:-1:-1;;;1031:30:15;;:2;:30;;;4313:51:18;1051:9:15;4380:18:18;;;4373:34;1031:2:15;;;;-1:-1:-1;;;;;1031:2:15;;-1:-1:-1;1031:7:15;;-1:-1:-1;4286:18:18;;1031:30:15;;;;;;;;;;;;;;;;;;;;2060:159;2109:2;;:20;;-1:-1:-1;;;2109:20:15;;2126:1;2109:20;;;2376:51:18;2109:2:15;;;;-1:-1:-1;;;;;2109:2:15;;:8;;2349:18:18;;2109:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2139:2:15;;:32;;-1:-1:-1;;;2139:32:15;;4619:2:18;2139:32:15;;;4601:21:18;4658:2;4638:18;;;4631:30;-1:-1:-1;;;4677:18:18;;;4670:43;2139:2:15;;;;-1:-1:-1;;;;;2139:2:15;;-1:-1:-1;2139:15:15;;-1:-1:-1;4730:18:18;;2139:32:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2181:8:15;;:31;;-1:-1:-1;;;2181:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;2181:8:15;;;;-1:-1:-1;2181:12:15;;-1:-1:-1;2181:8:15;;2565:18:18;;2181:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2060:159::o;1540:167::-;1584:2;;:20;;-1:-1:-1;;;1584:20:15;;1601:1;1584:20;;;2376:51:18;1584:2:15;;;;-1:-1:-1;;;;;1584:2:15;;:8;;2349:18:18;;1584:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1614:8:15;;:31;;-1:-1:-1;;;1614:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;1614:8:15;;;;-1:-1:-1;1614:12:15;;-1:-1:-1;1634:7:15;;2565:18:18;;1614:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1669:8:15;;:30;;-1:-1:-1;;;1669:30:15;;:8;:30;;;2376:51:18;1660:40:15;;-1:-1:-1;;;;;;1669:8:15;;;;-1:-1:-1;1669:18:15;;-1:-1:-1;2349:18:18;;1669:30:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1660:40;;2592:25:18;;;2580:2;2565:18;1660:40:15;;;;;;;1540:167::o;3597:168::-;3655:2;;:20;;-1:-1:-1;;;3655:20:15;;3672:1;3655:20;;;2376:51:18;3655:2:15;;;;-1:-1:-1;;;;;3655:2:15;;:8;;2349:18:18;;3655:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3685:2:15;;:38;;-1:-1:-1;;;3685:38:15;;5331:2:18;3685:38:15;;;5313:21:18;5370:2;5350:18;;;5343:30;-1:-1:-1;;;5389:18:18;;;5382:49;3685:2:15;;;;-1:-1:-1;;;;;3685:2:15;;-1:-1:-1;3685:15:15;;-1:-1:-1;5448:18:18;;3685:38:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3733:8:15;;:25;;-1:-1:-1;;;3733:25:15;;:8;:25;;;5685::18;3750:7:15;5726:18:18;;;5719:34;-1:-1:-1;;;;;3733:8:15;;;;-1:-1:-1;3733:13:15;;-1:-1:-1;5658:18:18;;3733:25:15;5477:282:18;2271:188:15;2332:2;;:20;;-1:-1:-1;;;2332:20:15;;2349:1;2332:20;;;2376:51:18;2332:2:15;;;;-1:-1:-1;;;;;2332:2:15;;:8;;2349:18:18;;2332:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2362:2:15;;:45;;-1:-1:-1;;;2362:45:15;;5965:2:18;2362:45:15;;;5947:21:18;6004:2;5984:18;;;5977:30;6043:28;6023:18;;;6016:56;2362:2:15;;;;-1:-1:-1;;;;;2362:2:15;;-1:-1:-1;2362:15:15;;-1:-1:-1;6089:18:18;;2362:45:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2417:8:15;;:35;;-1:-1:-1;;;2417:35:15;;:8;:35;;;2592:25:18;-1:-1:-1;;;;;2417:8:15;;;;-1:-1:-1;2417:12:15;;-1:-1:-1;2437:11:15;;2565:18:18;;2417:35:15;2438:185:18;4548:201:15;4602:2;;:20;;-1:-1:-1;;;4602:20:15;;4619:1;4602:20;;;2376:51:18;4602:2:15;;;;-1:-1:-1;;;;;4602:2:15;;:8;;2349:18:18;;4602:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4632:8:15;;:34;;-1:-1:-1;;;4632:34:15;;:8;:34;;;2592:25:18;-1:-1:-1;;;;;4632:8:15;;;;-1:-1:-1;4632:12:15;;-1:-1:-1;4652:10:15;;2565:18:18;;4632:34:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4676:2:15;;:39;;-1:-1:-1;;;4676:39:15;;:2;;;;-1:-1:-1;;;;;4676:2:15;;-1:-1:-1;4676:15:15;;-1:-1:-1;4676:39:15;;-1:-1:-1;4676:39:15;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4725:8;;;;;;;;;-1:-1:-1;;;;;4725:8:15;-1:-1:-1;;;;;4725:15:15;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:167;2570:2;;:20;;-1:-1:-1;;;2570:20:15;;2587:1;2570:20;;;2376:51:18;2570:2:15;;;;-1:-1:-1;;;;;2570:2:15;;:8;;2349:18:18;;2570:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2600:2:15;;:35;;-1:-1:-1;;;2600:35:15;;6667:2:18;2600:35:15;;;6649:21:18;6706:2;6686:18;;;6679:30;-1:-1:-1;;;6725:18:18;;;6718:46;2600:2:15;;;;-1:-1:-1;;;;;2600:2:15;;-1:-1:-1;2600:15:15;;-1:-1:-1;6781:18:18;;2600:35:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2645:8:15;;:33;;-1:-1:-1;;;2645:33:15;;:8;:33;;;2592:25:18;-1:-1:-1;;;;;2645:8:15;;;;-1:-1:-1;2645:12:15;;-1:-1:-1;2665:9:15;;2565:18:18;;2645:33:15;2438:185:18;4094:302:15;4140:2;;:20;;-1:-1:-1;;;4140:20:15;;4157:1;4140:20;;;2376:51:18;4140:2:15;;;;-1:-1:-1;;;;;4140:2:15;;:8;;2349:18:18;;4140:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4170:8:15;;:31;;-1:-1:-1;;;4170:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;4170:8:15;;;;-1:-1:-1;4170:12:15;;-1:-1:-1;4190:7:15;;2565:18:18;;4170:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4211:2:15;;:20;;-1:-1:-1;;;4211:20:15;;:2;:20;;;2376:51:18;4211:2:15;;;;-1:-1:-1;;;;;4211:2:15;;-1:-1:-1;4211:8:15;;-1:-1:-1;2349:18:18;;;-1:-1:-1;4211:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4241:8:15;;:31;;-1:-1:-1;;;4241:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;4241:8:15;;;;-1:-1:-1;4241:12:15;;-1:-1:-1;4261:7:15;;2565:18:18;;4241:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4282:2:15;;:20;;-1:-1:-1;;;4282:20:15;;4299:1;4282:20;;;2376:51:18;4282:2:15;;;;-1:-1:-1;;;;;4282:2:15;;-1:-1:-1;4282:8:15;;-1:-1:-1;2349:18:18;;;-1:-1:-1;4282:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4312:2:15;;:27;;-1:-1:-1;;;4312:27:15;;7201:2:18;4312:27:15;;;7183:21:18;7240:1;7220:18;;;7213:29;-1:-1:-1;;;7258:18:18;;;7251:38;4312:2:15;;;;-1:-1:-1;;;;;4312:2:15;;-1:-1:-1;4312:15:15;;-1:-1:-1;7306:18:18;;4312:27:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4349:8:15;;:40;;-1:-1:-1;;;4349:40:15;;4363:15;4349:40;;;5685:25:18;;;5726:18;;;5719:34;-1:-1:-1;;;;;4349:8:15;;;;-1:-1:-1;4349:13:15;;-1:-1:-1;5658:18:18;;4349:40:15;5477:282:18;3772:316:15;3825:2;;:20;;-1:-1:-1;;;3825:20:15;;3842:1;3825:20;;;2376:51:18;3825:2:15;;;;-1:-1:-1;;;;;3825:2:15;;:8;;2349:18:18;;3825:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3855:8:15;;:31;;-1:-1:-1;;;3855:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;3855:8:15;;;;-1:-1:-1;3855:12:15;;-1:-1:-1;3875:7:15;;2565:18:18;;3855:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3896:2:15;;:20;;-1:-1:-1;;;3896:20:15;;:2;:20;;;2376:51:18;3896:2:15;;;;-1:-1:-1;;;;;3896:2:15;;-1:-1:-1;3896:8:15;;-1:-1:-1;2349:18:18;;;-1:-1:-1;3896:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3926:8:15;;:31;;-1:-1:-1;;;3926:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;3926:8:15;;;;-1:-1:-1;3926:12:15;;-1:-1:-1;3946:7:15;;2565:18:18;;3926:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3967:2:15;;:20;;-1:-1:-1;;;3967:20:15;;3984:1;3967:20;;;2376:51:18;3967:2:15;;;;-1:-1:-1;;;;;3967:2:15;;-1:-1:-1;3967:8:15;;-1:-1:-1;2349:18:18;;;-1:-1:-1;3967:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3997:2:15;;:35;;-1:-1:-1;;;3997:35:15;;6667:2:18;3997:35:15;;;6649:21:18;6706:2;6686:18;;;6679:30;-1:-1:-1;;;6725:18:18;;;6718:46;3997:2:15;;;;-1:-1:-1;;;;;3997:2:15;;-1:-1:-1;3997:15:15;;-1:-1:-1;6781:18:18;;3997:35:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4042:8:15;;:39;;-1:-1:-1;;;4042:39:15;;4056:15;4042:39;;;5685:25:18;4042:8:15;5726:18:18;;;5719:34;-1:-1:-1;;;;;4042:8:15;;;;-1:-1:-1;4042:13:15;;-1:-1:-1;5658:18:18;;4042:39:15;5477:282:18;1774:234:15;1811:2;;:20;;-1:-1:-1;;;1811:20:15;;1828:1;1811:20;;;2376:51:18;1811:2:15;;;;-1:-1:-1;;;;;1811:2:15;;:8;;2349:18:18;;1811:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1841:8:15;;:31;;-1:-1:-1;;;1841:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;1841:8:15;;;;-1:-1:-1;1841:12:15;;-1:-1:-1;1861:7:15;;2565:18:18;;1841:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1882:2:15;;:20;;-1:-1:-1;;;1882:20:15;;:2;:20;;;2376:51:18;1882:2:15;;;;-1:-1:-1;;;;;1882:2:15;;-1:-1:-1;1882:8:15;;-1:-1:-1;2349:18:18;;;-1:-1:-1;1882:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1915:8:15;;:31;;-1:-1:-1;;;1915:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;1915:8:15;;;;-1:-1:-1;1915:12:15;;-1:-1:-1;1935:7:15;;2565:18:18;;1915:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1970:8:15;;:30;;-1:-1:-1;;;1970:30:15;;1997:1;1970:30;;;2376:51:18;1961:40:15;;-1:-1:-1;;;;;;1970:8:15;;;;-1:-1:-1;1970:18:15;;-1:-1:-1;2349:18:18;;1970:30:15;2230:203:18;3416:175:15;3467:2;;:20;;-1:-1:-1;;;3467:20:15;;3484:1;3467:20;;;2376:51:18;3467:2:15;;;;-1:-1:-1;;;;;3467:2:15;;:8;;2349:18:18;;3467:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3497:2:15;;:39;;-1:-1:-1;;;3497:39:15;;:2;;;;-1:-1:-1;;;;;3497:2:15;;-1:-1:-1;3497:15:15;;-1:-1:-1;3497:39:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3546:8:15;;:38;;-1:-1:-1;;;3546:38:15;;3560:14;3546:38;;;5685:25:18;3576:7:15;5726:18:18;;;5719:34;-1:-1:-1;;;;;3546:8:15;;;;-1:-1:-1;3546:13:15;;-1:-1:-1;5658:18:18;;3546:38:15;5477:282:18;2768:162:15;2813:2;;:20;;-1:-1:-1;;;2813:20:15;;2830:1;2813:20;;;2376:51:18;2813:2:15;;;;-1:-1:-1;;;;;2813:2:15;;:8;;2349:18:18;;2813:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2843:2:15;;:27;;-1:-1:-1;;;2843:27:15;;7201:2:18;2843:27:15;;;7183:21:18;7240:1;7220:18;;;7213:29;-1:-1:-1;;;7258:18:18;;;7251:38;2843:2:15;;;;-1:-1:-1;;;;;2843:2:15;;-1:-1:-1;2843:15:15;;-1:-1:-1;7306:18:18;;2843:27:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2880:8:15;;:43;;-1:-1:-1;;;2880:43:15;;2909:13;2880:43;;;2592:25:18;-1:-1:-1;;;;;2880:8:15;;;;-1:-1:-1;2880:12:15;;-1:-1:-1;2900:7:15;;2565:18:18;;2880:43:15;2438:185:18;2980:230:15;3018:2;;:20;;-1:-1:-1;;;3018:20:15;;3035:1;3018:20;;;2376:51:18;3018:2:15;;;;-1:-1:-1;;;;;3018:2:15;;:8;;2349:18:18;;3018:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3048:8:15;;:31;;-1:-1:-1;;;3048:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;3048:8:15;;;;-1:-1:-1;3048:12:15;;-1:-1:-1;3068:7:15;;2565:18:18;;3048:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3089:2:15;;:25;;-1:-1:-1;;;3089:25:15;;:2;:25;;;2376:51:18;3089:2:15;;;;-1:-1:-1;;;;;3089:2:15;;-1:-1:-1;3089:13:15;;-1:-1:-1;2349:18:18;;;-1:-1:-1;3089:25:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3124:8:15;;:31;;-1:-1:-1;;;3124:31:15;;:8;:31;;;2592:25:18;-1:-1:-1;;;;;3124:8:15;;;;-1:-1:-1;3124:12:15;;-1:-1:-1;3144:7:15;;2565:18:18;;3124:31:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3165:8:15;;:38;;-1:-1:-1;;;3165:38:15;;3179:12;3165:38;;;5685:25:18;3193:9:15;5726:18:18;;;5719:34;-1:-1:-1;;;;;3165:8:15;;;;-1:-1:-1;3165:13:15;;-1:-1:-1;5658:18:18;;;-1:-1:-1;3165:38:15;5477:282:18;3246:164:15;3299:2;;:20;;-1:-1:-1;;;3299:20:15;;3316:1;3299:20;;;2376:51:18;3299:2:15;;;;-1:-1:-1;;;;;3299:2:15;;:8;;2349:18:18;;3299:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3329:2:15;;:39;;-1:-1:-1;;;3329:39:15;;:2;;;;-1:-1:-1;;;;;3329:2:15;;-1:-1:-1;3329:15:15;;-1:-1:-1;3329:39:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3378:8:15;;:25;;-1:-1:-1;;;3378:25:15;;:8;:25;;;5685::18;3395:7:15;5726:18:18;;;5719:34;-1:-1:-1;;;;;3378:8:15;;;;-1:-1:-1;3378:13:15;;-1:-1:-1;5658:18:18;;3378:25:15;5477:282:18;1133:342:15;1333:2;;;:20;;-1:-1:-1;;;1333:20:15;;;;;2376:51:18;;;;1333:2:15;;;-1:-1:-1;;;;;1333:2:15;;:8;;2349:18:18;;1333:20:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1363:8:15;;:105;;-1:-1:-1;;;1363:105:15;;-1:-1:-1;;;;;1363:8:15;;;;-1:-1:-1;1363:19:15;;-1:-1:-1;1363:105:15;;1383:5;;1390:7;;1399:13;;1414:10;;1426:17;;1445:12;;1459:8;;1363:105;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1133:342;;;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;206:127:18:-;267:10;262:3;258:20;255:1;248:31;298:4;295:1;288:15;322:4;319:1;312:15;338:719;381:5;434:3;427:4;419:6;415:17;411:27;401:55;;452:1;449;442:12;401:55;488:6;475:20;514:18;551:2;547;544:10;541:36;;;557:18;;:::i;:::-;632:2;626:9;600:2;686:13;;-1:-1:-1;;682:22:18;;;706:2;678:31;674:40;662:53;;;730:18;;;750:22;;;727:46;724:72;;;776:18;;:::i;:::-;816:10;812:2;805:22;851:2;843:6;836:18;897:3;890:4;885:2;877:6;873:15;869:26;866:35;863:55;;;914:1;911;904:12;863:55;978:2;971:4;963:6;959:17;952:4;944:6;940:17;927:54;1025:1;1018:4;1013:2;1005:6;1001:15;997:26;990:37;1045:6;1036:15;;;;;;338:719;;;;:::o;1062:131::-;-1:-1:-1;;;;;1137:31:18;;1127:42;;1117:70;;1183:1;1180;1173:12;1117:70;1062:131;:::o;1198:1027::-;1331:6;1339;1347;1355;1363;1371;1379;1432:3;1420:9;1411:7;1407:23;1403:33;1400:53;;;1449:1;1446;1439:12;1400:53;1489:9;1476:23;1518:18;1559:2;1551:6;1548:14;1545:34;;;1575:1;1572;1565:12;1545:34;1598:50;1640:7;1631:6;1620:9;1616:22;1598:50;:::i;:::-;1588:60;;1701:2;1690:9;1686:18;1673:32;1657:48;;1730:2;1720:8;1717:16;1714:36;;;1746:1;1743;1736:12;1714:36;;1769:52;1813:7;1802:8;1791:9;1787:24;1769:52;:::i;:::-;1759:62;;;1868:2;1857:9;1853:18;1840:32;1830:42;;1919:2;1908:9;1904:18;1891:32;1881:42;;1970:3;1959:9;1955:19;1942:33;1932:43;;2025:3;2014:9;2010:19;1997:33;2039:31;2064:5;2039:31;:::i;:::-;2089:5;-1:-1:-1;2146:3:18;2131:19;;2118:33;2160;2118;2160;:::i;:::-;2212:7;2202:17;;;1198:1027;;;;;;;;;;:::o;3721:385::-;3800:6;3808;3861:2;3849:9;3840:7;3836:23;3832:32;3829:52;;;3877:1;3874;3867:12;3829:52;3909:9;3903:16;3928:31;3953:5;3928:31;:::i;:::-;4028:2;4013:18;;4007:25;3978:5;;-1:-1:-1;4041:33:18;4007:25;4041:33;:::i;:::-;4093:7;4083:17;;;3721:385;;;;;:::o;4759:184::-;4829:6;4882:2;4870:9;4861:7;4857:23;4853:32;4850:52;;;4898:1;4895;4888:12;4850:52;-1:-1:-1;4921:16:18;;4759:184;-1:-1:-1;4759:184:18:o;6118:343::-;6319:2;6301:21;;;6358:2;6338:18;;;6331:30;-1:-1:-1;;;6392:2:18;6377:18;;6370:50;6452:2;6437:18;;6118:343::o;9037:472::-;9079:3;9117:5;9111:12;9144:6;9139:3;9132:19;9169:1;9179:162;9193:6;9190:1;9187:13;9179:162;;;9255:4;9311:13;;;9307:22;;9301:29;9283:11;;;9279:20;;9272:59;9208:12;9179:162;;;9359:6;9356:1;9353:13;9350:87;;;9425:1;9418:4;9409:6;9404:3;9400:16;9396:27;9389:38;9350:87;-1:-1:-1;9491:2:18;9470:15;-1:-1:-1;;9466:29:18;9457:39;;;;9498:4;9453:50;;9037:472;-1:-1:-1;;9037:472:18:o;9514:799::-;9851:3;9840:9;9833:22;9814:4;9878:46;9919:3;9908:9;9904:19;9896:6;9878:46;:::i;:::-;9972:9;9964:6;9960:22;9955:2;9944:9;9940:18;9933:50;10000:33;10026:6;10018;10000:33;:::i;:::-;10064:2;10049:18;;10042:34;;;;-1:-1:-1;;10107:2:18;10092:18;;10085:34;;;;10150:3;10135:19;;10128:35;;;;-1:-1:-1;;;;;10238:15:18;;;10190:3;10217:19;;10210:44;10291:15;10285:3;10270:19;;;10263:44;9992:41;9514:799;-1:-1:-1;;9514:799:18:o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/kirancherukuri/Documents/verse/protocol/verse-contracts/src/test/Exchange.t.sol",
    "exportedSymbols": {
      "BondingCurve": [
        3053
      ],
      "Clones": [
        3133
      ],
      "Cryptomedia": [
        3277
      ],
      "DSTest": [
        1680
      ],
      "ERC20": [
        2072
      ],
      "ERC721": [
        2573
      ],
      "ERC721TokenReceiver": [
        2588
      ],
      "Exchange": [
        3721
      ],
      "ExchangeTest": [
        7366
      ],
      "IBondingCurve": [
        6271
      ],
      "ICryptomedia": [
        6279
      ],
      "PairFactory": [
        3901
      ],
      "Power": [
        6231
      ],
      "ReentrancyGuard": [
        2614
      ],
      "SafeTransferLib": [
        2714
      ],
      "VM": [
        7601
      ]
    },
    "id": 7367,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 6707,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".10"
        ],
        "nodeType": "PragmaDirective",
        "src": "36:25:15"
      },
      {
        "absolutePath": "/Users/kirancherukuri/Documents/verse/protocol/verse-contracts/lib/ds-test/src/test.sol",
        "file": "ds-test/test.sol",
        "id": 6708,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7367,
        "sourceUnit": 1681,
        "src": "63:26:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kirancherukuri/Documents/verse/protocol/verse-contracts/src/BondingCurve.sol",
        "file": "../BondingCurve.sol",
        "id": 6709,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7367,
        "sourceUnit": 3054,
        "src": "90:29:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kirancherukuri/Documents/verse/protocol/verse-contracts/src/PairFactory.sol",
        "file": "../PairFactory.sol",
        "id": 6710,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7367,
        "sourceUnit": 3902,
        "src": "120:28:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kirancherukuri/Documents/verse/protocol/verse-contracts/src/Exchange.sol",
        "file": "../Exchange.sol",
        "id": 6711,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7367,
        "sourceUnit": 3722,
        "src": "149:25:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kirancherukuri/Documents/verse/protocol/verse-contracts/src/Cryptomedia.sol",
        "file": "../Cryptomedia.sol",
        "id": 6712,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7367,
        "sourceUnit": 3278,
        "src": "175:28:15",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kirancherukuri/Documents/verse/protocol/verse-contracts/src/test/Utils/VM.sol",
        "file": "./Utils/VM.sol",
        "id": 6714,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 7367,
        "sourceUnit": 7602,
        "src": "204:34:15",
        "symbolAliases": [
          {
            "foreign": {
              "id": 6713,
              "name": "VM",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "src": "212:2:15",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 6715,
              "name": "DSTest",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 1680,
              "src": "265:6:15"
            },
            "id": 6716,
            "nodeType": "InheritanceSpecifier",
            "src": "265:6:15"
          }
        ],
        "canonicalName": "ExchangeTest",
        "contractDependencies": [
          3053,
          3901
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 7366,
        "linearizedBaseContracts": [
          7366,
          1680
        ],
        "name": "ExchangeTest",
        "nameLocation": "249:12:15",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 6719,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "281:2:15",
            "nodeType": "VariableDeclaration",
            "scope": 7366,
            "src": "278:5:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_VM_$7601",
              "typeString": "contract VM"
            },
            "typeName": {
              "id": 6718,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6717,
                "name": "VM",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 7601,
                "src": "278:2:15"
              },
              "referencedDeclaration": 7601,
              "src": "278:2:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_VM_$7601",
                "typeString": "contract VM"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6722,
            "mutability": "mutable",
            "name": "bondingCurve",
            "nameLocation": "302:12:15",
            "nodeType": "VariableDeclaration",
            "scope": 7366,
            "src": "289:25:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_BondingCurve_$3053",
              "typeString": "contract BondingCurve"
            },
            "typeName": {
              "id": 6721,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6720,
                "name": "BondingCurve",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3053,
                "src": "289:12:15"
              },
              "referencedDeclaration": 3053,
              "src": "289:12:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BondingCurve_$3053",
                "typeString": "contract BondingCurve"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6725,
            "mutability": "mutable",
            "name": "pairFactory",
            "nameLocation": "332:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 7366,
            "src": "320:23:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_PairFactory_$3901",
              "typeString": "contract PairFactory"
            },
            "typeName": {
              "id": 6724,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6723,
                "name": "PairFactory",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3901,
                "src": "320:11:15"
              },
              "referencedDeclaration": 3901,
              "src": "320:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_PairFactory_$3901",
                "typeString": "contract PairFactory"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6728,
            "mutability": "mutable",
            "name": "exchange",
            "nameLocation": "358:8:15",
            "nodeType": "VariableDeclaration",
            "scope": 7366,
            "src": "349:17:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Exchange_$3721",
              "typeString": "contract Exchange"
            },
            "typeName": {
              "id": 6727,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6726,
                "name": "Exchange",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3721,
                "src": "349:8:15"
              },
              "referencedDeclaration": 3721,
              "src": "349:8:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Exchange_$3721",
                "typeString": "contract Exchange"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6731,
            "mutability": "mutable",
            "name": "cryptomedia",
            "nameLocation": "384:11:15",
            "nodeType": "VariableDeclaration",
            "scope": 7366,
            "src": "372:23:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Cryptomedia_$3277",
              "typeString": "contract Cryptomedia"
            },
            "typeName": {
              "id": 6730,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6729,
                "name": "Cryptomedia",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 3277,
                "src": "372:11:15"
              },
              "referencedDeclaration": 3277,
              "src": "372:11:15",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Cryptomedia_$3277",
                "typeString": "contract Cryptomedia"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6733,
            "mutability": "mutable",
            "name": "exchangeAddress",
            "nameLocation": "409:15:15",
            "nodeType": "VariableDeclaration",
            "scope": 7366,
            "src": "401:23:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6732,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "401:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 6735,
            "mutability": "mutable",
            "name": "cryptomediaAddress",
            "nameLocation": "438:18:15",
            "nodeType": "VariableDeclaration",
            "scope": 7366,
            "src": "430:26:15",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 6734,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "430:7:15",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 6808,
              "nodeType": "Block",
              "src": "488:580:15",
              "statements": [
                {
                  "expression": {
                    "id": 6742,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6738,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6719,
                      "src": "521:2:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VM_$7601",
                        "typeString": "contract VM"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "307837313039373039454366613931613830363236664633393839443638663637463562314444313244",
                          "id": 6740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "529:42:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "value": "0x7109709ECfa91a80626fF3989D68f67F5b1DD12D"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6739,
                        "name": "VM",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7601,
                        "src": "526:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_VM_$7601_$",
                          "typeString": "type(contract VM)"
                        }
                      },
                      "id": 6741,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "526:46:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_VM_$7601",
                        "typeString": "contract VM"
                      }
                    },
                    "src": "521:51:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_VM_$7601",
                      "typeString": "contract VM"
                    }
                  },
                  "id": 6743,
                  "nodeType": "ExpressionStatement",
                  "src": "521:51:15"
                },
                {
                  "expression": {
                    "id": 6749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6744,
                      "name": "bondingCurve",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6722,
                      "src": "626:12:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondingCurve_$3053",
                        "typeString": "contract BondingCurve"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 6747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "641:16:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_BondingCurve_$3053_$",
                          "typeString": "function () returns (contract BondingCurve)"
                        },
                        "typeName": {
                          "id": 6746,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6745,
                            "name": "BondingCurve",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3053,
                            "src": "645:12:15"
                          },
                          "referencedDeclaration": 3053,
                          "src": "645:12:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_BondingCurve_$3053",
                            "typeString": "contract BondingCurve"
                          }
                        }
                      },
                      "id": 6748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "641:18:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_BondingCurve_$3053",
                        "typeString": "contract BondingCurve"
                      }
                    },
                    "src": "626:33:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_BondingCurve_$3053",
                      "typeString": "contract BondingCurve"
                    }
                  },
                  "id": 6750,
                  "nodeType": "ExpressionStatement",
                  "src": "626:33:15"
                },
                {
                  "expression": {
                    "id": 6760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6751,
                      "name": "pairFactory",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6725,
                      "src": "669:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairFactory_$3901",
                        "typeString": "contract PairFactory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 6757,
                              "name": "bondingCurve",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 6722,
                              "src": "707:12:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_BondingCurve_$3053",
                                "typeString": "contract BondingCurve"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_BondingCurve_$3053",
                                "typeString": "contract BondingCurve"
                              }
                            ],
                            "id": 6756,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "699:7:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 6755,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "699:7:15",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 6758,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "699:21:15",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6754,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "683:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_PairFactory_$3901_$",
                          "typeString": "function (address) returns (contract PairFactory)"
                        },
                        "typeName": {
                          "id": 6753,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 6752,
                            "name": "PairFactory",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 3901,
                            "src": "687:11:15"
                          },
                          "referencedDeclaration": 3901,
                          "src": "687:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PairFactory_$3901",
                            "typeString": "contract PairFactory"
                          }
                        }
                      },
                      "id": 6759,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "683:38:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_PairFactory_$3901",
                        "typeString": "contract PairFactory"
                      }
                    },
                    "src": "669:52:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_PairFactory_$3901",
                      "typeString": "contract PairFactory"
                    }
                  },
                  "id": 6761,
                  "nodeType": "ExpressionStatement",
                  "src": "669:52:15"
                },
                {
                  "expression": {
                    "id": 6774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "components": [
                        {
                          "id": 6762,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6733,
                          "src": "732:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 6763,
                          "name": "cryptomediaAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6735,
                          "src": "749:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 6764,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "731:37:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "5665727365",
                          "id": 6767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "790:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6407b9a2f7ca9789c9366042780be252d3b29744da8aab9d1558ccd820a82bce",
                            "typeString": "literal_string \"Verse\""
                          },
                          "value": "Verse"
                        },
                        {
                          "hexValue": "5645525345",
                          "id": 6768,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "799:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_d8b103fdfd7615c83bca46d3e309956b3e8cee4aa3cfb53290f4e7589aef04f2",
                            "typeString": "literal_string \"VERSE\""
                          },
                          "value": "VERSE"
                        },
                        {
                          "hexValue": "323432343234",
                          "id": 6769,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "808:6:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_242424_by_1",
                            "typeString": "int_const 242424"
                          },
                          "value": "242424"
                        },
                        {
                          "hexValue": "373234323233303839363830353435",
                          "id": 6770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "816:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_724223089680545_by_1",
                            "typeString": "int_const 724223089680545"
                          },
                          "value": "724223089680545"
                        },
                        {
                          "hexValue": "353030",
                          "id": 6771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "833:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
                        {
                          "hexValue": "76657273652e78797a",
                          "id": 6772,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "838:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_72ec82e51d19aca26e3849de7b98b87639654827285a70702095a38b3e42a9d0",
                            "typeString": "literal_string \"verse.xyz\""
                          },
                          "value": "verse.xyz"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6407b9a2f7ca9789c9366042780be252d3b29744da8aab9d1558ccd820a82bce",
                            "typeString": "literal_string \"Verse\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_d8b103fdfd7615c83bca46d3e309956b3e8cee4aa3cfb53290f4e7589aef04f2",
                            "typeString": "literal_string \"VERSE\""
                          },
                          {
                            "typeIdentifier": "t_rational_242424_by_1",
                            "typeString": "int_const 242424"
                          },
                          {
                            "typeIdentifier": "t_rational_724223089680545_by_1",
                            "typeString": "int_const 724223089680545"
                          },
                          {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_72ec82e51d19aca26e3849de7b98b87639654827285a70702095a38b3e42a9d0",
                            "typeString": "literal_string \"verse.xyz\""
                          }
                        ],
                        "expression": {
                          "id": 6765,
                          "name": "pairFactory",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6725,
                          "src": "771:11:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_PairFactory_$3901",
                            "typeString": "contract PairFactory"
                          }
                        },
                        "id": 6766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "create",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3900,
                        "src": "771:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_address_$_t_address_$",
                          "typeString": "function (string memory,string memory,uint256,uint256,uint256,string memory) external returns (address,address)"
                        }
                      },
                      "id": 6773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "771:79:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "src": "731:119:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6775,
                  "nodeType": "ExpressionStatement",
                  "src": "731:119:15"
                },
                {
                  "expression": {
                    "id": 6780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6776,
                      "name": "exchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6728,
                      "src": "860:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$3721",
                        "typeString": "contract Exchange"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6778,
                          "name": "exchangeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6733,
                          "src": "880:15:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6777,
                        "name": "Exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3721,
                        "src": "871:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Exchange_$3721_$",
                          "typeString": "type(contract Exchange)"
                        }
                      },
                      "id": 6779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "871:25:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Exchange_$3721",
                        "typeString": "contract Exchange"
                      }
                    },
                    "src": "860:36:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Exchange_$3721",
                      "typeString": "contract Exchange"
                    }
                  },
                  "id": 6781,
                  "nodeType": "ExpressionStatement",
                  "src": "860:36:15"
                },
                {
                  "expression": {
                    "id": 6786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 6782,
                      "name": "cryptomedia",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 6731,
                      "src": "906:11:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cryptomedia_$3277",
                        "typeString": "contract Cryptomedia"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 6784,
                          "name": "cryptomediaAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6735,
                          "src": "932:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 6783,
                        "name": "Cryptomedia",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3277,
                        "src": "920:11:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Cryptomedia_$3277_$",
                          "typeString": "type(contract Cryptomedia)"
                        }
                      },
                      "id": 6785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "920:31:15",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Cryptomedia_$3277",
                        "typeString": "contract Cryptomedia"
                      }
                    },
                    "src": "906:45:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Cryptomedia_$3277",
                      "typeString": "contract Cryptomedia"
                    }
                  },
                  "id": 6787,
                  "nodeType": "ExpressionStatement",
                  "src": "906:45:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 6793,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1007:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 6792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "999:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6791,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "999:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "999:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 6795,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1011:9:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 6788,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "991:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6790,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7552,
                      "src": "991:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "991:30:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6797,
                  "nodeType": "ExpressionStatement",
                  "src": "991:30:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 6803,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1047:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 6802,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1039:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6801,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1039:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1039:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 6805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1051:9:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000000_by_1",
                          "typeString": "int_const 100000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 6798,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "1031:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6800,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7552,
                      "src": "1031:7:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 6806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1031:30:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6807,
                  "nodeType": "ExpressionStatement",
                  "src": "1031:30:15"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "id": 6809,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "473:5:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6736,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "478:2:15"
            },
            "returnParameters": {
              "id": 6737,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "488:0:15"
            },
            "scope": 7366,
            "src": "464:604:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6847,
              "nodeType": "Block",
              "src": "1323:152:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 6831,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1350:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 6830,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1342:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6829,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1342:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6832,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1342:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6826,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "1333:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6828,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "1333:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 6833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6834,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 6838,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6811,
                        "src": "1383:5:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6839,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6813,
                        "src": "1390:7:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "id": 6840,
                        "name": "_reserveRatio",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6815,
                        "src": "1399:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6841,
                        "name": "_slopeInit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6817,
                        "src": "1414:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6842,
                        "name": "_transactionShare",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6819,
                        "src": "1426:17:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 6843,
                        "name": "_cryptomedia",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6821,
                        "src": "1445:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 6844,
                        "name": "_creator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6823,
                        "src": "1459:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6835,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "1363:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 6837,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3409,
                      "src": "1363:19:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (string memory,string memory,uint256,uint256,uint256,address,address) external"
                      }
                    },
                    "id": 6845,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1363:105:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6846,
                  "nodeType": "ExpressionStatement",
                  "src": "1363:105:15"
                }
              ]
            },
            "functionSelector": "ff5507fd",
            "id": 6848,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testFail_Initialize",
            "nameLocation": "1142:19:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6824,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6811,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1176:5:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6848,
                  "src": "1162:19:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6810,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6813,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1197:7:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6848,
                  "src": "1183:21:15",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 6812,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1183:6:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6815,
                  "mutability": "mutable",
                  "name": "_reserveRatio",
                  "nameLocation": "1214:13:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6848,
                  "src": "1206:21:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6814,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1206:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6817,
                  "mutability": "mutable",
                  "name": "_slopeInit",
                  "nameLocation": "1237:10:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6848,
                  "src": "1229:18:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6816,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6819,
                  "mutability": "mutable",
                  "name": "_transactionShare",
                  "nameLocation": "1257:17:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6848,
                  "src": "1249:25:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6818,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1249:7:15",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6821,
                  "mutability": "mutable",
                  "name": "_cryptomedia",
                  "nameLocation": "1284:12:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6848,
                  "src": "1276:20:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6820,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1276:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6823,
                  "mutability": "mutable",
                  "name": "_creator",
                  "nameLocation": "1306:8:15",
                  "nodeType": "VariableDeclaration",
                  "scope": 6848,
                  "src": "1298:16:15",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6822,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1298:7:15",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1161:154:15"
            },
            "returnParameters": {
              "id": 6825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1323:0:15"
            },
            "scope": 7366,
            "src": "1133:342:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6878,
              "nodeType": "Block",
              "src": "1574:133:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 6856,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1601:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 6855,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1593:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6854,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1593:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1593:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6851,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "1584:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6853,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "1584:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 6858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6859,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 6865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1643:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 6860,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "1614:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 6862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "1614:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 6864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 6863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1634:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1614:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 6866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1614:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6867,
                  "nodeType": "ExpressionStatement",
                  "src": "1614:31:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "31",
                                "id": 6873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1696:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                }
                              ],
                              "id": 6872,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1688:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6871,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1688:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1688:10:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6869,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6728,
                            "src": "1669:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$3721",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 6870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1711,
                          "src": "1669:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 6875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1669:30:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6868,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1660:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1660:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6877,
                  "nodeType": "EmitStatement",
                  "src": "1655:45:15"
                }
              ]
            },
            "functionSelector": "2d585d29",
            "id": 6879,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BuyInitial",
            "nameLocation": "1549:15:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1564:2:15"
            },
            "returnParameters": {
              "id": 6850,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1574:0:15"
            },
            "scope": 7366,
            "src": "1540:167:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6926,
              "nodeType": "Block",
              "src": "1801:207:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 6887,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1828:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 6886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1820:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6885,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1820:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6888,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1820:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6882,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "1811:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6884,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "1811:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 6889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1811:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6890,
                  "nodeType": "ExpressionStatement",
                  "src": "1811:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 6896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1870:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 6891,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "1841:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 6893,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "1841:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 6895,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 6894,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1861:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "1841:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 6897,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1841:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6898,
                  "nodeType": "ExpressionStatement",
                  "src": "1841:31:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 6904,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1899:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 6903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1891:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6902,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1891:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1891:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6899,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "1882:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6901,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "1882:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 6906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1882:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6907,
                  "nodeType": "ExpressionStatement",
                  "src": "1882:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 6913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1944:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 6908,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "1915:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 6910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "1915:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 6912,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "38",
                          "id": 6911,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1935:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8000000000000000000_by_1",
                            "typeString": "int_const 8000000000000000000"
                          },
                          "value": "8"
                        }
                      ],
                      "src": "1915:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 6914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1915:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6915,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:31:15"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "32",
                                "id": 6921,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1997:1:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                },
                                "value": "2"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_2_by_1",
                                  "typeString": "int_const 2"
                                }
                              ],
                              "id": 6920,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1989:7:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 6919,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1989:7:15",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 6922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1989:10:15",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 6917,
                            "name": "exchange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 6728,
                            "src": "1970:8:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Exchange_$3721",
                              "typeString": "contract Exchange"
                            }
                          },
                          "id": 6918,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1711,
                          "src": "1970:18:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 6923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1970:30:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 6916,
                      "name": "log_uint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1961:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 6924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1961:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6925,
                  "nodeType": "EmitStatement",
                  "src": "1956:45:15"
                }
              ]
            },
            "functionSelector": "81bd6191",
            "id": 6927,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Buy",
            "nameLocation": "1783:8:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6880,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1791:2:15"
            },
            "returnParameters": {
              "id": 6881,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1801:0:15"
            },
            "scope": 7366,
            "src": "1774:234:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6953,
              "nodeType": "Block",
              "src": "2099:120:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 6935,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2126:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 6934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2118:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6933,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2118:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2118:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6930,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "2109:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "2109:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 6937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2109:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6938,
                  "nodeType": "ExpressionStatement",
                  "src": "2109:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e56414c49445f56414c5545",
                        "id": 6942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2155:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f38185948b9759248e56ec02128912506b4a23870d442e59ae3f857bcd81896c",
                          "typeString": "literal_string \"INVALID_VALUE\""
                        },
                        "value": "INVALID_VALUE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_f38185948b9759248e56ec02128912506b4a23870d442e59ae3f857bcd81896c",
                          "typeString": "literal_string \"INVALID_VALUE\""
                        }
                      ],
                      "expression": {
                        "id": 6939,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "2139:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6941,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "2139:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 6943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2139:32:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6944,
                  "nodeType": "ExpressionStatement",
                  "src": "2139:32:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 6950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2210:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 6945,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "2181:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 6947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "2181:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 6949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "30",
                          "id": 6948,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2201:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "src": "2181:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 6951,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2181:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6952,
                  "nodeType": "ExpressionStatement",
                  "src": "2181:31:15"
                }
              ]
            },
            "functionSelector": "0cab351b",
            "id": 6954,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BuyInvalidValue",
            "nameLocation": "2069:20:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6928,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2089:2:15"
            },
            "returnParameters": {
              "id": 6929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2099:0:15"
            },
            "scope": 7366,
            "src": "2060:159:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 6980,
              "nodeType": "Block",
              "src": "2322:137:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 6962,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2349:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 6961,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2341:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6960,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2341:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2341:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6957,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "2332:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6959,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "2332:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 6964,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2332:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6965,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e53554646494349454e545f494e495449414c5f5052494345",
                        "id": 6969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2378:28:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_291bf61a2da6878d8381c935b93756580dd400ed72952f95efdde9d8c2ff0f2c",
                          "typeString": "literal_string \"INSUFFICIENT_INITIAL_PRICE\""
                        },
                        "value": "INSUFFICIENT_INITIAL_PRICE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_291bf61a2da6878d8381c935b93756580dd400ed72952f95efdde9d8c2ff0f2c",
                          "typeString": "literal_string \"INSUFFICIENT_INITIAL_PRICE\""
                        }
                      ],
                      "expression": {
                        "id": 6966,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "2362:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6968,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "2362:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 6970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2362:45:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6971,
                  "nodeType": "ExpressionStatement",
                  "src": "2362:45:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 6977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2450:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 6972,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "2417:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 6974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "2417:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 6976,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e303031",
                          "id": 6975,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2437:11:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000_by_1",
                            "typeString": "int_const 1000000000000000"
                          },
                          "value": "0.001"
                        }
                      ],
                      "src": "2417:32:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 6978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2417:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6979,
                  "nodeType": "ExpressionStatement",
                  "src": "2417:35:15"
                }
              ]
            },
            "functionSelector": "396abd31",
            "id": 6981,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BuyInsufficientInitialPrice",
            "nameLocation": "2280:32:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2312:2:15"
            },
            "returnParameters": {
              "id": 6956,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2322:0:15"
            },
            "scope": 7366,
            "src": "2271:188:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7007,
              "nodeType": "Block",
              "src": "2560:125:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 6989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2587:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 6988,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2579:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 6987,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2579:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 6990,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2579:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 6984,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "2570:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6986,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "2570:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 6991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2570:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6992,
                  "nodeType": "ExpressionStatement",
                  "src": "2570:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e56414c49445f534c495050414745",
                        "id": 6996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2616:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2275a0dfcd51017e4938cf0ad9d24fe969b7605346a387a14a332b5fabc59d78",
                          "typeString": "literal_string \"INVALID_SLIPPAGE\""
                        },
                        "value": "INVALID_SLIPPAGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2275a0dfcd51017e4938cf0ad9d24fe969b7605346a387a14a332b5fabc59d78",
                          "typeString": "literal_string \"INVALID_SLIPPAGE\""
                        }
                      ],
                      "expression": {
                        "id": 6993,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "2600:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 6995,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "2600:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 6997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2600:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 6998,
                  "nodeType": "ExpressionStatement",
                  "src": "2600:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 7004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2676:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "expression": {
                          "id": 6999,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "2645:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "2645:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e31",
                          "id": 7002,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2665:9:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000000000000000_by_1",
                            "typeString": "int_const 100000000000000000"
                          },
                          "value": "0.1"
                        }
                      ],
                      "src": "2645:30:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2645:33:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7006,
                  "nodeType": "ExpressionStatement",
                  "src": "2645:33:15"
                }
              ]
            },
            "functionSelector": "3cc7c94a",
            "id": 7008,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BuyInvalidSlippage",
            "nameLocation": "2527:23:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2550:2:15"
            },
            "returnParameters": {
              "id": 6983,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2560:0:15"
            },
            "scope": 7366,
            "src": "2518:167:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7039,
              "nodeType": "Block",
              "src": "2803:127:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7016,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2830:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7015,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2822:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7014,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2822:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7017,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2822:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7011,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "2813:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "2813:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2813:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7019,
                  "nodeType": "ExpressionStatement",
                  "src": "2813:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "534c495050414745",
                        "id": 7023,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2859:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_321df8dfb8873a6b0a8268df5ece3152e2f1f620dbbddca0704c2b68a6bcea2c",
                          "typeString": "literal_string \"SLIPPAGE\""
                        },
                        "value": "SLIPPAGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_321df8dfb8873a6b0a8268df5ece3152e2f1f620dbbddca0704c2b68a6bcea2c",
                          "typeString": "literal_string \"SLIPPAGE\""
                        }
                      ],
                      "expression": {
                        "id": 7020,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "2843:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7022,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "2843:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 7024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2843:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7025,
                  "nodeType": "ExpressionStatement",
                  "src": "2843:27:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        },
                        "id": 7036,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3530",
                          "id": 7031,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2909:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_50_by_1",
                            "typeString": "int_const 50"
                          },
                          "value": "50"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 7034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 7032,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2915:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 7033,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "2919:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "2915:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 7035,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "2914:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2909:13:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_50000000000000000000_by_1",
                          "typeString": "int_const 50000000000000000000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_50000000000000000000_by_1",
                            "typeString": "int_const 50000000000000000000"
                          }
                        ],
                        "expression": {
                          "id": 7026,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "2880:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "2880:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 7029,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2900:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "2880:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2880:43:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7038,
                  "nodeType": "ExpressionStatement",
                  "src": "2880:43:15"
                }
              ]
            },
            "functionSelector": "cb72be24",
            "id": 7040,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_BuySlippage",
            "nameLocation": "2777:16:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7009,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2793:2:15"
            },
            "returnParameters": {
              "id": 7010,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2803:0:15"
            },
            "scope": 7366,
            "src": "2768:162:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7089,
              "nodeType": "Block",
              "src": "3008:202:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3035:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7047,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3027:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7046,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3027:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7049,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3027:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7043,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3018:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7045,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "3018:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7050,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3018:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7051,
                  "nodeType": "ExpressionStatement",
                  "src": "3018:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3077:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 7052,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "3048:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7054,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "3048:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 7055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3068:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "3048:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3048:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7059,
                  "nodeType": "ExpressionStatement",
                  "src": "3048:31:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 7065,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3111:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 7064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3103:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3103:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3103:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7060,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3089:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7540,
                      "src": "3089:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3089:25:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7068,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:25:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3153:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 7069,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "3124:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "3124:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "38",
                          "id": 7072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3144:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8000000000000000000_by_1",
                            "typeString": "int_const 8000000000000000000"
                          },
                          "value": "8"
                        }
                      ],
                      "src": "3124:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3124:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7076,
                  "nodeType": "ExpressionStatement",
                  "src": "3124:31:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "id": 7085,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 7080,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3179:1:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 7083,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 7081,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3184:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 7082,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3188:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "3184:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 7084,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3183:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3179:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      },
                      {
                        "hexValue": "302e31",
                        "id": 7086,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3193:9:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        },
                        "value": "0.1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_100000000000000000_by_1",
                          "typeString": "int_const 100000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 7077,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "3165:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 7079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "3165:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 7087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3165:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7088,
                  "nodeType": "ExpressionStatement",
                  "src": "3165:38:15"
                }
              ]
            },
            "functionSelector": "d93f5337",
            "id": 7090,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Sell",
            "nameLocation": "2989:9:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2998:2:15"
            },
            "returnParameters": {
              "id": 7042,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3008:0:15"
            },
            "scope": 7366,
            "src": "2980:230:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7115,
              "nodeType": "Block",
              "src": "3289:121:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "33",
                            "id": 7098,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3316:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            },
                            "value": "3"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_3_by_1",
                              "typeString": "int_const 3"
                            }
                          ],
                          "id": 7097,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3308:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7096,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3308:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3308:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7093,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3299:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "3299:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3299:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7101,
                  "nodeType": "ExpressionStatement",
                  "src": "3299:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e53554646494349454e545f42414c414e4345",
                        "id": 7105,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3345:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_153c6a82d06260899a3190a7f053b8e53b5844ee1a57108f9b35d4e78ccddb58",
                          "typeString": "literal_string \"INSUFFICIENT_BALANCE\""
                        },
                        "value": "INSUFFICIENT_BALANCE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_153c6a82d06260899a3190a7f053b8e53b5844ee1a57108f9b35d4e78ccddb58",
                          "typeString": "literal_string \"INSUFFICIENT_BALANCE\""
                        }
                      ],
                      "expression": {
                        "id": 7102,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3329:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "3329:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 7106,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3329:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7107,
                  "nodeType": "ExpressionStatement",
                  "src": "3329:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3392:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 7112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3395:7:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 7108,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "3378:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 7110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "3378:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 7113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3378:25:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7114,
                  "nodeType": "ExpressionStatement",
                  "src": "3378:25:15"
                }
              ]
            },
            "functionSelector": "e850d1f8",
            "id": 7116,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_NonHolderCannotSell",
            "nameLocation": "3255:24:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7091,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3279:2:15"
            },
            "returnParameters": {
              "id": 7092,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3289:0:15"
            },
            "scope": 7366,
            "src": "3246:164:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7146,
              "nodeType": "Block",
              "src": "3457:134:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3484:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7123,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3476:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7122,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3476:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3476:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7119,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3467:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "3467:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3467:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7127,
                  "nodeType": "ExpressionStatement",
                  "src": "3467:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e53554646494349454e545f42414c414e4345",
                        "id": 7131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3513:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_153c6a82d06260899a3190a7f053b8e53b5844ee1a57108f9b35d4e78ccddb58",
                          "typeString": "literal_string \"INSUFFICIENT_BALANCE\""
                        },
                        "value": "INSUFFICIENT_BALANCE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_153c6a82d06260899a3190a7f053b8e53b5844ee1a57108f9b35d4e78ccddb58",
                          "typeString": "literal_string \"INSUFFICIENT_BALANCE\""
                        }
                      ],
                      "expression": {
                        "id": 7128,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3497:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7130,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "3497:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 7132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3497:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7133,
                  "nodeType": "ExpressionStatement",
                  "src": "3497:39:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_500000000000000000000_by_1",
                          "typeString": "int_const 500000000000000000000"
                        },
                        "id": 7142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "353030",
                          "id": 7137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3560:3:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500_by_1",
                            "typeString": "int_const 500"
                          },
                          "value": "500"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 7140,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 7138,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3567:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 7139,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3571:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "3567:6:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 7141,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3566:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "3560:14:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000000_by_1",
                          "typeString": "int_const 500000000000000000000"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 7143,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3576:7:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_500000000000000000000_by_1",
                          "typeString": "int_const 500000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 7134,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "3546:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 7136,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "3546:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 7144,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3546:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7145,
                  "nodeType": "ExpressionStatement",
                  "src": "3546:38:15"
                }
              ]
            },
            "functionSelector": "ca8f3000",
            "id": 7147,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SellInvalidAmount",
            "nameLocation": "3425:22:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7117,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3447:2:15"
            },
            "returnParameters": {
              "id": 7118,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3457:0:15"
            },
            "scope": 7366,
            "src": "3416:175:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7172,
              "nodeType": "Block",
              "src": "3645:120:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7155,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3672:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3664:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7153,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3664:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3664:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7150,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3655:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "3655:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7158,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e56414c49445f53454c4c5f414d4f554e54",
                        "id": 7162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3701:21:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_792632fbc714b77db934205ace9b7e7b60ad9b29f625abe52ffbd95e19219637",
                          "typeString": "literal_string \"INVALID_SELL_AMOUNT\""
                        },
                        "value": "INVALID_SELL_AMOUNT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_792632fbc714b77db934205ace9b7e7b60ad9b29f625abe52ffbd95e19219637",
                          "typeString": "literal_string \"INVALID_SELL_AMOUNT\""
                        }
                      ],
                      "expression": {
                        "id": 7159,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3685:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "3685:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 7163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3685:38:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7164,
                  "nodeType": "ExpressionStatement",
                  "src": "3685:38:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 7168,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3747:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "hexValue": "31",
                        "id": 7169,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3750:7:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 7165,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "3733:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 7167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "3733:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 7170,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3733:25:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7171,
                  "nodeType": "ExpressionStatement",
                  "src": "3733:25:15"
                }
              ]
            },
            "functionSelector": "38489a0c",
            "id": 7173,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SellInvalidAmountArgZero",
            "nameLocation": "3606:29:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3635:2:15"
            },
            "returnParameters": {
              "id": 7149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3645:0:15"
            },
            "scope": 7366,
            "src": "3597:168:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7237,
              "nodeType": "Block",
              "src": "3815:273:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7181,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3842:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7180,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3834:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7179,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3834:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7182,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3834:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7176,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3825:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "3825:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3825:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7184,
                  "nodeType": "ExpressionStatement",
                  "src": "3825:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3884:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 7185,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "3855:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7187,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "3855:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7189,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 7188,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3875:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "3855:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3855:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7192,
                  "nodeType": "ExpressionStatement",
                  "src": "3855:31:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 7198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3913:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 7197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3905:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7196,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3905:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3905:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7193,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3896:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "3896:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7200,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3896:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7201,
                  "nodeType": "ExpressionStatement",
                  "src": "3896:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7207,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3955:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 7202,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "3926:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "3926:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7206,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "38",
                          "id": 7205,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3946:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8000000000000000000_by_1",
                            "typeString": "int_const 8000000000000000000"
                          },
                          "value": "8"
                        }
                      ],
                      "src": "3926:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3926:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7209,
                  "nodeType": "ExpressionStatement",
                  "src": "3926:31:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7215,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3984:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3976:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7213,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3976:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3976:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7210,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3967:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7212,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "3967:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3967:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7218,
                  "nodeType": "ExpressionStatement",
                  "src": "3967:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e56414c49445f534c495050414745",
                        "id": 7222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4013:18:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2275a0dfcd51017e4938cf0ad9d24fe969b7605346a387a14a332b5fabc59d78",
                          "typeString": "literal_string \"INVALID_SLIPPAGE\""
                        },
                        "value": "INVALID_SLIPPAGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_2275a0dfcd51017e4938cf0ad9d24fe969b7605346a387a14a332b5fabc59d78",
                          "typeString": "literal_string \"INVALID_SLIPPAGE\""
                        }
                      ],
                      "expression": {
                        "id": 7219,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "3997:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "3997:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 7223,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3997:35:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7224,
                  "nodeType": "ExpressionStatement",
                  "src": "3997:35:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "id": 7233,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 7228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4056:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 7231,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 7229,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4062:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 7230,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4068:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "4062:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 7232,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4061:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "4056:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 7234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4073:7:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 7225,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "4042:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 7227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "4042:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 7235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4042:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7236,
                  "nodeType": "ExpressionStatement",
                  "src": "4042:39:15"
                }
              ]
            },
            "functionSelector": "6394b38b",
            "id": 7238,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SellInvalidSlippage",
            "nameLocation": "3781:24:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3805:2:15"
            },
            "returnParameters": {
              "id": 7175,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3815:0:15"
            },
            "scope": 7366,
            "src": "3772:316:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7302,
              "nodeType": "Block",
              "src": "4130:266:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4157:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4149:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7244,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4149:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4149:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7241,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "4140:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7243,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "4140:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4140:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7249,
                  "nodeType": "ExpressionStatement",
                  "src": "4140:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4199:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 7250,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "4170:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "4170:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 7253,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4190:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "4170:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4170:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7257,
                  "nodeType": "ExpressionStatement",
                  "src": "4170:31:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "32",
                            "id": 7263,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4228:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            },
                            "value": "2"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_2_by_1",
                              "typeString": "int_const 2"
                            }
                          ],
                          "id": 7262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4220:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4220:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4220:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7258,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "4211:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7260,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "4211:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4211:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7266,
                  "nodeType": "ExpressionStatement",
                  "src": "4211:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4270:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 7267,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "4241:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "4241:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "38",
                          "id": 7270,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4261:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_8000000000000000000_by_1",
                            "typeString": "int_const 8000000000000000000"
                          },
                          "value": "8"
                        }
                      ],
                      "src": "4241:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4241:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7274,
                  "nodeType": "ExpressionStatement",
                  "src": "4241:31:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7280,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4299:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4291:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7278,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4291:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4291:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7275,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "4282:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "4282:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4282:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7283,
                  "nodeType": "ExpressionStatement",
                  "src": "4282:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "534c495050414745",
                        "id": 7287,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4328:10:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_321df8dfb8873a6b0a8268df5ece3152e2f1f620dbbddca0704c2b68a6bcea2c",
                          "typeString": "literal_string \"SLIPPAGE\""
                        },
                        "value": "SLIPPAGE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_321df8dfb8873a6b0a8268df5ece3152e2f1f620dbbddca0704c2b68a6bcea2c",
                          "typeString": "literal_string \"SLIPPAGE\""
                        }
                      ],
                      "expression": {
                        "id": 7284,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "4312:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7286,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "4312:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 7288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4312:27:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7289,
                  "nodeType": "ExpressionStatement",
                  "src": "4312:27:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "id": 7298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 7293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4363:2:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10_by_1",
                            "typeString": "int_const 10"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "*",
                        "rightExpression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              },
                              "id": 7296,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "3130",
                                "id": 7294,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4369:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_10_by_1",
                                  "typeString": "int_const 10"
                                },
                                "value": "10"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "**",
                              "rightExpression": {
                                "hexValue": "3138",
                                "id": 7295,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4375:2:15",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_18_by_1",
                                  "typeString": "int_const 18"
                                },
                                "value": "18"
                              },
                              "src": "4369:8:15",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            }
                          ],
                          "id": 7297,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4368:10:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "4363:15:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 7299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4380:8:15",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 7290,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "4349:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 7292,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sell",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3657,
                      "src": "4349:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256) external"
                      }
                    },
                    "id": 7300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4349:40:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7301,
                  "nodeType": "ExpressionStatement",
                  "src": "4349:40:15"
                }
              ]
            },
            "functionSelector": "51c0ca53",
            "id": 7303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_SellSlippage",
            "nameLocation": "4103:17:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7239,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4120:2:15"
            },
            "returnParameters": {
              "id": 7240,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4130:0:15"
            },
            "scope": 7366,
            "src": "4094:302:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7328,
              "nodeType": "Block",
              "src": "4432:110:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4464:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4456:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7309,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4456:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4456:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7306,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "4442:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7308,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "startPrank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7540,
                      "src": "4442:13:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4442:25:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7314,
                  "nodeType": "ExpressionStatement",
                  "src": "4442:25:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4506:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 7315,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "4477:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "4477:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "31",
                          "id": 7318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4497:7:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        }
                      ],
                      "src": "4477:28:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4477:31:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7322,
                  "nodeType": "ExpressionStatement",
                  "src": "4477:31:15"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7323,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "4518:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 7325,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3702,
                      "src": "4518:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 7326,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4518:17:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7327,
                  "nodeType": "ExpressionStatement",
                  "src": "4518:17:15"
                }
              ]
            },
            "functionSelector": "05601b94",
            "id": 7329,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_Redeem",
            "nameLocation": "4411:11:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7304,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4422:2:15"
            },
            "returnParameters": {
              "id": 7305,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4432:0:15"
            },
            "scope": 7366,
            "src": "4402:140:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7360,
              "nodeType": "Block",
              "src": "4592:157:15",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "31",
                            "id": 7337,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4619:1:15",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "id": 7336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4611:7:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 7335,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4611:7:15",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 7338,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4611:10:15",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 7332,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "4602:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7334,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7534,
                      "src": "4602:8:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 7339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4602:20:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7340,
                  "nodeType": "ExpressionStatement",
                  "src": "4602:20:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 7346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4664:1:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "id": 7341,
                          "name": "exchange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 6728,
                          "src": "4632:8:15",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Exchange_$3721",
                            "typeString": "contract Exchange"
                          }
                        },
                        "id": 7343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "buy",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3546,
                        "src": "4632:12:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 7345,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "302e3031",
                          "id": 7344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4652:10:15",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000_by_1",
                            "typeString": "int_const 10000000000000000"
                          },
                          "value": "0.01"
                        }
                      ],
                      "src": "4632:31:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 7347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4632:34:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7348,
                  "nodeType": "ExpressionStatement",
                  "src": "4632:34:15"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "494e53554646494349454e545f42414c414e4345",
                        "id": 7352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4692:22:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_153c6a82d06260899a3190a7f053b8e53b5844ee1a57108f9b35d4e78ccddb58",
                          "typeString": "literal_string \"INSUFFICIENT_BALANCE\""
                        },
                        "value": "INSUFFICIENT_BALANCE"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_153c6a82d06260899a3190a7f053b8e53b5844ee1a57108f9b35d4e78ccddb58",
                          "typeString": "literal_string \"INSUFFICIENT_BALANCE\""
                        }
                      ],
                      "expression": {
                        "id": 7349,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6719,
                        "src": "4676:2:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_VM_$7601",
                          "typeString": "contract VM"
                        }
                      },
                      "id": 7351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7566,
                      "src": "4676:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 7353,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:39:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7354,
                  "nodeType": "ExpressionStatement",
                  "src": "4676:39:15"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 7355,
                        "name": "exchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6728,
                        "src": "4725:8:15",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Exchange_$3721",
                          "typeString": "contract Exchange"
                        }
                      },
                      "id": 7357,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "redeem",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3702,
                      "src": "4725:15:15",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 7358,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4725:17:15",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7359,
                  "nodeType": "ExpressionStatement",
                  "src": "4725:17:15"
                }
              ]
            },
            "functionSelector": "3aaa75b5",
            "id": 7361,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_RedeemInvalidBalance",
            "nameLocation": "4557:25:15",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7330,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4582:2:15"
            },
            "returnParameters": {
              "id": 7331,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4592:0:15"
            },
            "scope": 7366,
            "src": "4548:201:15",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 7364,
              "nodeType": "Block",
              "src": "4782:2:15",
              "statements": []
            },
            "id": 7365,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7362,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4762:2:15"
            },
            "returnParameters": {
              "id": 7363,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4782:0:15"
            },
            "scope": 7366,
            "src": "4755:29:15",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7367,
        "src": "240:4547:15",
        "usedErrors": []
      }
    ],
    "src": "36:4751:15"
  }
}